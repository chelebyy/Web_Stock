æ
PC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Models\UserDto.cs
	namespace 	
Stock
 
. 
Application 
. 
Models "
{ 
public 

class 
UserDto 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Adi 
{ 
get 
;  
set! $
;$ %
}& '
=( )
string* 0
.0 1
Empty1 6
;6 7
public		 
string		 
Soyadi		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
=		+ ,
string		- 3
.		3 4
Empty		4 9
;		9 :
public

 
string

 
Sicil

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
=

* +
string

, 2
.

2 3
Empty

3 8
;

8 9
public 
bool 
IsAdmin 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
? 
RoleId 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
RoleName 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public 
DateTime 
	CreatedAt !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
DateTime 
? 
	UpdatedAt "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DateTime 
? 
LastLoginAt $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
} »
PC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Models\RoleDto.cs
	namespace 	
Stock
 
. 
Application 
. 
Models "
{ 
public 

class 
RoleDto 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
?		 
Name		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
public

 
string

 
?

 
Description

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
public 
DateTime 
	CreatedAt !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
DateTime 
? 
	UpdatedAt "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
List 
< 
string 
> 
? 
Permissions (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
List 
< 
UserDto 
> 
? 
Users #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
public 

class 
RoleWithUsersDto !
:" #
RoleDto$ +
{ 
public 
ICollection 
< 
UserDto "
>" #
Users$ )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
} 
public 

class 
CreateRoleDto 
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
public 
List 
< 
int 
> 
? 
PermissionIds '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
} 
public 

class 
UpdateRoleDto 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public   
string   
Name   
{   
get    
;    !
set  " %
;  % &
}  ' (
=  ) *
string  + 1
.  1 2
Empty  2 7
;  7 8
public!! 
string!! 
Description!! !
{!!" #
get!!$ '
;!!' (
set!!) ,
;!!, -
}!!. /
=!!0 1
string!!2 8
.!!8 9
Empty!!9 >
;!!> ?
public"" 
List"" 
<"" 
int"" 
>"" 
?"" 
PermissionIds"" '
{""( )
get""* -
;""- .
set""/ 2
;""2 3
}""4 5
}## 
}$$ Ò
UC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Models\DTOs\UserDto.cs
	namespace 	
Stock
 
. 
Application 
. 
Models "
." #
DTOs# '
{ 
public 

class 
UserDto 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Adi 
{ 
get 
;  
set! $
;$ %
}& '
=( )
string* 0
.0 1
Empty1 6
;6 7
public		 
string		 
Soyadi		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
=		+ ,
string		- 3
.		3 4
Empty		4 9
;		9 :
public

 
bool

 
IsAdmin

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
public 
int 
? 
RoleId 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
? 
RoleName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
Sicil 
{ 
get !
;! "
set# &
;& '
}( )
=* +
string, 2
.2 3
Empty3 8
;8 9
public 
DateTime 
	CreatedAt !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
DateTime 
? 
LastLoginAt $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
} ˆ	
[C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Models\DTOs\UpdateRoleDto.cs
	namespace 	
Stock
 
. 
Application 
. 
Models "
." #
DTOs# '
{ 
public 

class 
UpdateRoleDto 
{		 
[ 	
Required	 
( 
ErrorMessage 
=  
$str! 6
)6 7
]7 8
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage &
=' (
$str) Q
)Q R
]R S
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage '
=( )
$str* T
)T U
]U V
public 
string 
? 
Description "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} î
UC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Models\DTOs\RoleDto.cs
	namespace 	
Stock
 
. 
Application 
. 
Models "
." #
DTOs# '
{ 
public		 

class		 
RoleDto		 
{

 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
? 
Description "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
	UserCount 
{ 
get "
;" #
set$ '
;' (
}) *
public 
List 
< 
PermissionDto !
>! "
Permissions# .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
== >
new? B
ListC G
<G H
PermissionDtoH U
>U V
(V W
)W X
;X Y
}## 
}$$ ∫
YC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Models\DTOs\RegisterDto.cs
	namespace 	
Stock
 
. 
Application 
. 
Models "
." #
DTOs# '
{ 
public 

class 
RegisterDto 
{ 
public 
string 
Adi 
{ 
get 
;  
set! $
;$ %
}& '
=( )
string* 0
.0 1
Empty1 6
;6 7
public 
string 
Soyadi 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
string- 3
.3 4
Empty4 9
;9 :
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public 
string 
ConfirmPassword %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
=4 5
string6 <
.< =
Empty= B
;B C
public		 
string		 
Sicil		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
=		* +
string		, 2
.		2 3
Empty		3 8
;		8 9
public

 
int

 
?

 
RoleId

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
} 
} Ú(
[C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Models\DTOs\PermissionDto.cs
	namespace 	
Stock
 
. 
Application 
. 
Models "
." #
DTOs# '
{ 
public 

class 
PermissionDto 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public		 
string		 
Description		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
=		0 1
string		2 8
.		8 9
Empty		9 >
;		> ?
public

 
string

 
ResourceType

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
=

1 2
string

3 9
.

9 :
Empty

: ?
;

? @
public 
string 
Group 
{ 
get !
;! "
set# &
;& '
}( )
=* +
string, 2
.2 3
Empty3 8
;8 9
public 
bool 
	IsGranted 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
true. 2
;2 3
public 
bool 

IsFromRole 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
IsCustom 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
RoleName 
{  !
get" %
;% &
set' *
;* +
}, -
} 
public 

class 
PermissionGroupDto #
{ 
public 
string 
Group 
{ 
get !
;! "
set# &
;& '
}( )
=* +
string, 2
.2 3
Empty3 8
;8 9
public 
List 
< 
PermissionDto !
>! "
Permissions# .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
== >
new? B
ListC G
<G H
PermissionDtoH U
>U V
(V W
)W X
;X Y
} 
public 

class $
AssignPermissionsRequest )
{ 
public 
List 
< 
int 
> 
PermissionIds &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
=5 6
new7 :
List; ?
<? @
int@ C
>C D
(D E
)E F
;F G
} 
public 

class 
UserPermissionDto "
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public   
int   
UserId   
{   
get   
;    
set  ! $
;  $ %
}  & '
public!! 
int!! 
PermissionId!! 
{!!  !
get!!" %
;!!% &
set!!' *
;!!* +
}!!, -
public"" 
bool"" 
	IsGranted"" 
{"" 
get""  #
;""# $
set""% (
;""( )
}""* +
public## 
string## 
	AdiSoyadi## 
{##  !
get##" %
;##% &
set##' *
;##* +
}##, -
=##. /
string##0 6
.##6 7
Empty##7 <
;##< =
public$$ 
string$$ 
PermissionName$$ $
{$$% &
get$$' *
;$$* +
set$$, /
;$$/ 0
}$$1 2
=$$3 4
string$$5 ;
.$$; <
Empty$$< A
;$$A B
public%% 
string%% 
ResourceType%% "
{%%# $
get%%% (
;%%( )
set%%* -
;%%- .
}%%/ 0
=%%1 2
string%%3 9
.%%9 :
Empty%%: ?
;%%? @
public&& 
string&& 
Description&& !
{&&" #
get&&$ '
;&&' (
set&&) ,
;&&, -
}&&. /
=&&0 1
string&&2 8
.&&8 9
Empty&&9 >
;&&> ?
public'' 
string'' 
Group'' 
{'' 
get'' !
;''! "
set''# &
;''& '
}''( )
=''* +
string'', 2
.''2 3
Empty''3 8
;''8 9
}(( 
})) æ
VC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Models\DTOs\LoginDto.cs
	namespace 	
Stock
 
. 
Application 
. 
Models "
." #
DTOs# '
{ 
public 

class 
LoginDto 
{ 
public 
string 
Sicil 
{ 
get !
;! "
set# &
;& '
}( )
=* +
string, 2
.2 3
Empty3 8
;8 9
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
} 
} ˆ	
[C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Models\DTOs\CreateRoleDto.cs
	namespace 	
Stock
 
. 
Application 
. 
Models "
." #
DTOs# '
{ 
public 

class 
CreateRoleDto 
{		 
[ 	
Required	 
( 
ErrorMessage 
=  
$str! 6
)6 7
]7 8
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage &
=' (
$str) Q
)Q R
]R S
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage '
=( )
$str* T
)T U
]U V
public 
string 
? 
Description "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} ê
_C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Models\DTOs\ChangePasswordDto.cs
	namespace 	
Stock
 
. 
Application 
. 
Models "
." #
DTOs# '
{ 
public 

class 
ChangePasswordDto "
{ 
[ 	
Required	 
( 
ErrorMessage 
=  
$str! :
): ;
]; <
public 
string 
CurrentPassword %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
=4 5
string6 <
.< =
Empty= B
;B C
[

 	
Required

	 
(

 
ErrorMessage

 
=

  
$str

! 8
)

8 9
]

9 :
[ 	
	MinLength	 
( 
$num 
, 
ErrorMessage "
=# $
$str% L
)L M
]M N
public 
string 
NewPassword !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
[ 	
Required	 
( 
ErrorMessage 
=  
$str! @
)@ A
]A B
[ 	
Compare	 
( 
nameof 
( 
NewPassword #
)# $
,$ %
ErrorMessage& 2
=3 4
$str5 N
)N O
]O P
public 
string 
ConfirmPassword %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
=4 5
string6 <
.< =
Empty= B
;B C
} 
} Ï
]C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Models\DTOs\AuthResponseDto.cs
	namespace 	
Stock
 
. 
Application 
. 
Models "
." #
DTOs# '
{ 
public 

class 
AuthResponseDto  
{ 
public 
bool 
Success 
{ 
get !
;! "
set# &
;& '
}( )
public		 
string		 
Token		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
=		* +
string		, 2
.		2 3
Empty		3 8
;		8 9
public

 
string

 
Sicil

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
=

* +
string

, 2
.

2 3
Empty

3 8
;

8 9
public 
string 
Adi 
{ 
get 
;  
set! $
;$ %
}& '
=( )
string* 0
.0 1
Empty1 6
;6 7
public 
string 
Soyadi 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
string- 3
.3 4
Empty4 9
;9 :
public 
bool 
IsAdmin 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
RoleName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 
? 
RoleId 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
? 
ErrorMessage #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
Message 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
UserId 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
string- 3
.3 4
Empty4 9
;9 :
public 
DateTime 

Expiration "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
List 
< 
string 
> 
Permissions '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
=6 7
new8 ;
List< @
<@ A
stringA G
>G H
(H I
)I J
;J K
} 
} √
YC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Interfaces\ILocalLogger.cs
	namespace 	
Stock
 
. 
Application 
. 

Interfaces &
{ 
public 

	interface 
ILocalLogger !
{		 
void

 
LogInformation

 
(

 
string

 "
message

# *
,

* +
params

, 2
object

3 9
[

9 :
]

: ;
args

< @
)

@ A
;

A B
void 

LogWarning 
( 
string 
message &
,& '
params( .
object/ 5
[5 6
]6 7
args8 <
)< =
;= >
void 
LogError 
( 
	Exception 
	exception  )
,) *
string+ 1
message2 9
,9 :
params; A
objectB H
[H I
]I J
argsK O
)O P
;P Q
} 
} Ù
vC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Users\Validators\UpdateUserCommandValidator.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Users% *
.* +

Validators+ 5
{ 
public 

class &
UpdateUserCommandValidator +
:, -
AbstractValidator. ?
<? @
UpdateUserCommand@ Q
>Q R
{ 
public &
UpdateUserCommandValidator )
() *
)* +
{		 	
RuleFor

 
(

 
v

 
=>

 
v

 
.

 
Id

 
)

 
. 
NotEmpty 
( 
) 
. 
WithMessage '
(' (
$str( B
)B C
. 
GreaterThan 
( 
$num 
) 
.  
WithMessage  +
(+ ,
$str, D
)D E
;E F
RuleFor 
( 
v 
=> 
v 
. 
Sicil  
)  !
. 
NotEmpty 
( 
) 
. 
WithMessage '
(' (
$str( ;
); <
. 
MaximumLength 
( 
$num !
)! "
." #
WithMessage# .
(. /
$str/ R
)R S
;S T
RuleFor 
( 
v 
=> 
v 
. 
Adi 
) 
. 
NotEmpty 
( 
) 
. 
WithMessage '
(' (
$str( 8
)8 9
. 
MaximumLength 
( 
$num !
)! "
." #
WithMessage# .
(. /
$str/ O
)O P
;P Q
RuleFor 
( 
v 
=> 
v 
. 
Soyadi !
)! "
. 
NotEmpty 
( 
) 
. 
WithMessage '
(' (
$str( ;
); <
. 
MaximumLength 
( 
$num !
)! "
." #
WithMessage# .
(. /
$str/ R
)R S
;S T
RuleFor 
( 
v 
=> 
v 
. 
RoleId !
)! "
. 
NotEmpty 
( 
) 
. 
WithMessage '
(' (
$str( <
)< =
. 
GreaterThan 
( 
$num 
) 
.  
WithMessage  +
(+ ,
$str, >
)> ?
;? @
}   	
}!! 
}"" ¸
vC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Users\Validators\CreateUserCommandValidator.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Users% *
.* +

Validators+ 5
{ 
public 

class &
CreateUserCommandValidator +
:, -
AbstractValidator. ?
<? @
CreateUserCommand@ Q
>Q R
{ 
public &
CreateUserCommandValidator )
() *
)* +
{		 	
RuleFor

 
(

 
v

 
=>

 
v

 
.

 
Sicil

  
)

  !
. 
NotEmpty 
( 
) 
. 
WithMessage '
(' (
$str( ;
); <
. 
MaximumLength 
( 
$num !
)! "
." #
WithMessage# .
(. /
$str/ R
)R S
;S T
RuleFor 
( 
v 
=> 
v 
. 
Password #
)# $
. 
NotEmpty 
( 
) 
. 
WithMessage '
(' (
$str( ;
); <
. 
MinimumLength 
( 
$num  
)  !
.! "
WithMessage" -
(- .
$str. Q
)Q R
;R S
RuleFor 
( 
v 
=> 
v 
. 
Adi 
) 
. 
NotEmpty 
( 
) 
. 
WithMessage '
(' (
$str( 8
)8 9
. 
MaximumLength 
( 
$num !
)! "
." #
WithMessage# .
(. /
$str/ O
)O P
;P Q
RuleFor 
( 
v 
=> 
v 
. 
Soyadi !
)! "
. 
NotEmpty 
( 
) 
. 
WithMessage '
(' (
$str( ;
); <
. 
MaximumLength 
( 
$num !
)! "
." #
WithMessage# .
(. /
$str/ R
)R S
;S T
RuleFor 
( 
v 
=> 
v 
. 
RoleId !
)! "
. 
NotEmpty 
( 
) 
. 
WithMessage '
(' (
$str( <
)< =
. 
GreaterThan 
( 
$num 
) 
.  
WithMessage  +
(+ ,
$str, >
)> ?
;? @
} 	
}   
}!! ˜
oC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Users\Queries\GetUserByUsernameQuery.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Users% *
.* +
Queries+ 2
{ 
public 

class "
GetUserByUsernameQuery '
:( )
IRequest* 2
<2 3
UserDto3 :
>: ;
{ 
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
}		 
}

 À
|C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Users\Queries\GetUserById\GetUserByIdQueryHandler.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Users% *
.* +
Queries+ 2
.2 3
GetUserById3 >
{ 
public 

class #
GetUserByIdQueryHandler (
:) *
IRequestHandler+ :
<: ;
GetUserByIdQuery; K
,K L
UserDtoM T
?T U
>U V
{ 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
private 
readonly 
IMapper  
_mapper! (
;( )
public #
GetUserByIdQueryHandler &
(& '
IUnitOfWork' 2

unitOfWork3 =
,= >
IMapper? F
mapperG M
)M N
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
_mapper 
= 
mapper 
; 
} 	
public 
async 
Task 
< 
UserDto !
?! "
>" #
Handle$ *
(* +
GetUserByIdQuery+ ;
request< C
,C D
CancellationTokenE V
cancellationTokenW h
)h i
{ 	
var 
spec 
= 
new 3
'UserWithRoleAndPermissionsSpecification B
(B C
requestC J
.J K
IdK M
)M N
;N O
var 
user 
= 
await 
_unitOfWork (
.( )
GetRepository) 6
<6 7
User7 ;
>; <
(< =
)= >
.> ?
FirstOrDefaultAsync? R
(R S
specS W
,W X
cancellationTokenY j
)j k
;k l
if   
(   
user   
==   
null   
)   
{!! 
return"" 
null"" 
;"" 
}## 
return&& 
_mapper&& 
.&& 
Map&& 
<&& 
UserDto&& &
>&&& '
(&&' (
user&&( ,
)&&, -
;&&- .
}'' 	
}(( 
})) —
uC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Users\Queries\GetUserById\GetUserByIdQuery.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Users% *
.* +
Queries+ 2
.2 3
GetUserById3 >
{ 
public 

class 
GetUserByIdQuery !
:" #
IRequest$ ,
<, -
UserDto- 4
?4 5
>5 6
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
}		 
}

 ’
|C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Users\Queries\GetAllUsers\GetAllUsersQueryHandler.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Users% *
.* +
Queries+ 2
.2 3
GetAllUsers3 >
{ 
public 

class #
GetAllUsersQueryHandler (
:) *
IRequestHandler+ :
<: ;
GetAllUsersQuery; K
,K L
IEnumerableM X
<X Y
UserDtoY `
>` a
>a b
{ 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
private 
readonly 
IMapper  
_mapper! (
;( )
public #
GetAllUsersQueryHandler &
(& '
IUnitOfWork' 2

unitOfWork3 =
,= >
IMapper? F
mapperG M
)M N
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
_mapper 
= 
mapper 
; 
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
UserDto& -
>- .
>. /
Handle0 6
(6 7
GetAllUsersQuery7 G
requestH O
,O P
CancellationTokenQ b
cancellationTokenc t
)t u
{ 	
var 
spec 
= 
new '
UsersWithRolesSpecification 6
(6 7
)7 8
;8 9
var   
users   
=   
await   
_unitOfWork   )
.  ) *
GetRepository  * 7
<  7 8
User  8 <
>  < =
(  = >
)  > ?
.  ? @
	ListAsync  @ I
(  I J
spec  J N
,  N O
cancellationToken  P a
)  a b
;  b c
return## 
_mapper## 
.## 
Map## 
<## 
IEnumerable## *
<##* +
UserDto##+ 2
>##2 3
>##3 4
(##4 5
users##5 :
)##: ;
;##; <
}$$ 	
}%% 
}&& Ê
uC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Users\Queries\GetAllUsers\GetAllUsersQuery.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Users% *
.* +
Queries+ 2
.2 3
GetAllUsers3 >
{ 
public 

class 
GetAllUsersQuery !
:" #
IRequest$ ,
<, -
IEnumerable- 8
<8 9
UserDto9 @
>@ A
>A B
{ 
}		 
}

 ä?
rC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Users\Commands\UpdateUserCommandHandler.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Users% *
.* +
Commands+ 3
.3 4

UpdateUser4 >
;> ?
public 
class $
UpdateUserCommandHandler %
:& '
IRequestHandler( 7
<7 8
UpdateUserCommand8 I
,I J
UserDtoK R
?R S
>S T
{ 
private 
readonly 
IUnitOfWork  
_unitOfWork! ,
;, -
private 
readonly 
IMapper 
_mapper $
;$ %
private 
readonly 
IPasswordHasher $
_passwordHasher% 4
;4 5
public 
$
UpdateUserCommandHandler #
(# $
IUnitOfWork$ /

unitOfWork0 :
,: ;
IMapper< C
mapperD J
,J K
IPasswordHasherL [
passwordHasher\ j
)j k
{ 
_unitOfWork 
= 

unitOfWork  
;  !
_mapper 
= 
mapper 
; 
_passwordHasher 
= 
passwordHasher (
;( )
} 
public 

async 
Task 
< 
UserDto 
? 
> 
Handle  &
(& '
UpdateUserCommand' 8
request9 @
,@ A
CancellationTokenB S
cancellationTokenT e
)e f
{ 
var 
userSpec 
= 
new !
UserByIdSpecification 0
(0 1
request1 8
.8 9
Id9 ;
); <
;< =
var   
userToUpdate   
=   
await    
_unitOfWork  ! ,
.  , -
Users  - 2
.  2 3
FirstOrDefaultAsync  3 F
(  F G
userSpec  G O
,  O P
cancellationToken  Q b
)  b c
;  c d
if"" 

("" 
userToUpdate"" 
=="" 
null""  
)""  !
{## 	
throw$$ 
new$$ 
NotFoundException$$ '
($$' (
nameof$$( .
($$. /
User$$/ 3
)$$3 4
,$$4 5
request$$6 =
.$$= >
Id$$> @
)$$@ A
;$$A B
}%% 	
if'' 

('' 
!'' 
string'' 
.'' 
IsNullOrWhiteSpace'' &
(''& '
request''' .
.''. /
Sicil''/ 4
)''4 5
&&''6 8
userToUpdate''9 E
.''E F
Sicil''F K
!=''L N
request''O V
.''V W
Sicil''W \
)''\ ]
{(( 	
var)) 
spec)) 
=)) 
new)) $
UserBySicilSpecification)) 3
())3 4
request))4 ;
.)); <
Sicil))< A
)))A B
;))B C
var** 
existingUser** 
=** 
await** $
_unitOfWork**% 0
.**0 1
Users**1 6
.**6 7
FirstOrDefaultAsync**7 J
(**J K
spec**K O
,**O P
cancellationToken**Q b
)**b c
;**c d
if++ 
(++ 
existingUser++ 
!=++ 
null++  $
&&++% '
existingUser++( 4
.++4 5
Id++5 7
!=++8 :
request++; B
.++B C
Id++C E
)++E F
{,, 
throw-- 
new-- 
ConflictException-- +
(--+ ,
$"--, .
$str--. /
{--/ 0
request--0 7
.--7 8
Sicil--8 =
}--= >
$str--> b
"--b c
)--c d
;--d e
}.. 
}00 	
if88 

(88 
!88 
string88 
.88 
IsNullOrWhiteSpace88 &
(88& '
request88' .
.88. /
Adi88/ 2
)882 3
)883 4
{99 	
userToUpdate:: 
.:: 
Adi:: 
=:: 
request:: &
.::& '
Adi::' *
;::* +
};; 	
if<< 

(<< 
!<< 
string<< 
.<< 
IsNullOrWhiteSpace<< &
(<<& '
request<<' .
.<<. /
Soyadi<</ 5
)<<5 6
)<<6 7
{== 	
userToUpdate>> 
.>> 
Soyadi>> 
=>>  !
request>>" )
.>>) *
Soyadi>>* 0
;>>0 1
}?? 	
ifAA 

(AA 
requestAA 
.AA 
RoleIdAA 
.AA 
HasValueAA #
&&AA$ &
userToUpdateAA' 3
.AA3 4
RoleIdAA4 :
!=AA; =
requestAA> E
.AAE F
RoleIdAAF L
.AAL M
ValueAAM R
)AAR S
{BB 	
varCC 
roleSpecCC 
=CC 
newCC !
RoleByIdSpecificationCC 4
(CC4 5
requestCC5 <
.CC< =
RoleIdCC= C
.CCC D
ValueCCD I
)CCI J
;CCJ K
varDD 
	roleCountDD 
=DD 
awaitDD !
_unitOfWorkDD" -
.DD- .
RolesDD. 3
.DD3 4

CountAsyncDD4 >
(DD> ?
roleSpecDD? G
,DDG H
cancellationTokenDDI Z
)DDZ [
;DD[ \
ifEE 
(EE 
	roleCountEE 
==EE 
$numEE 
)EE 
{FF 
throwGG 
newGG 
NotFoundExceptionGG +
(GG+ ,
nameofGG, 2
(GG2 3
RoleGG3 7
)GG7 8
,GG8 9
requestGG: A
.GGA B
RoleIdGGB H
.GGH I
ValueGGI N
)GGN O
;GGO P
}HH 
userToUpdateII 
.II 
RoleIdII 
=II  !
requestII" )
.II) *
RoleIdII* 0
.II0 1
ValueII1 6
;II6 7
}JJ 	
ifLL 

(LL 
!LL 
stringLL 
.LL 
IsNullOrWhiteSpaceLL &
(LL& '
requestLL' .
.LL. /
PasswordLL/ 7
)LL7 8
)LL8 9
{MM 	
userToUpdateNN 
.NN 
PasswordHashNN %
=NN& '
_passwordHasherNN( 7
.NN7 8
HashPasswordNN8 D
(NND E
requestNNE L
.NNL M
PasswordNNM U
)NNU V
;NNV W
}OO 	
userToUpdateQQ 
.QQ 
IsAdminQQ 
=QQ 
requestQQ &
.QQ& '
IsAdminQQ' .
;QQ. /
_unitOfWorkSS 
.SS 
UsersSS 
.SS 
UpdateSS  
(SS  !
userToUpdateSS! -
)SS- .
;SS. /
awaitTT 
_unitOfWorkTT 
.TT 
SaveChangesAsyncTT *
(TT* +
cancellationTokenTT+ <
)TT< =
;TT= >
varVV 
updatedUserSpecVV 
=VV 
newVV !'
UsersWithRolesSpecificationVV" =
(VV= >
requestVV> E
.VVE F
IdVVF H
)VVH I
;VVI J
varWW 
updatedUserWithRoleWW 
=WW  !
awaitWW" '
_unitOfWorkWW( 3
.WW3 4
UsersWW4 9
.WW9 :
FirstOrDefaultAsyncWW: M
(WWM N
updatedUserSpecWWN ]
,WW] ^
cancellationTokenWW_ p
)WWp q
;WWq r
returnYY 
_mapperYY 
.YY 
MapYY 
<YY 
UserDtoYY "
>YY" #
(YY# $
updatedUserWithRoleYY$ 7
)YY7 8
;YY8 9
}ZZ 
}[[ Î
kC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Users\Commands\UpdateUserCommand.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Users% *
.* +
Commands+ 3
{ 
public 

class 
UpdateUserCommand "
:# $
IRequest% -
<- .
UserDto. 5
?5 6
>6 7
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
Adi		 
{		 
get		 
;		  
set		! $
;		$ %
}		& '
=		( )
string		* 0
.		0 1
Empty		1 6
;		6 7
public

 
string

 
Soyadi

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
=

+ ,
string

- 3
.

3 4
Empty

4 9
;

9 :
public 
bool 
IsAdmin 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
? 
RoleId 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Sicil 
{ 
get !
;! "
set# &
;& '
}( )
=* +
string, 2
.2 3
Empty3 8
;8 9
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
Password 
{  !
get" %
;% &
set' *
;* +
}, -
} 
} ¡
vC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Users\Commands\DeleteUser\DeleteUserCommand.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Users% *
.* +
Commands+ 3
.3 4

DeleteUser4 >
{ 
public 

class 
DeleteUserCommand "
:# $
IRequest% -
<- .
bool. 2
>2 3
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
} 
} è
rC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Users\Commands\DeleteUserCommandHandler.cs
	namespace

 	
Stock


 
.

 
Application

 
.

 
Features

 $
.

$ %
Users

% *
.

* +
Commands

+ 3
.

3 4

DeleteUser

4 >
;

> ?
public 
class $
DeleteUserCommandHandler %
:& '
IRequestHandler( 7
<7 8
DeleteUserCommand8 I
,I J
boolK O
>O P
{ 
private 
readonly 
IUnitOfWork  
_unitOfWork! ,
;, -
public 
$
DeleteUserCommandHandler #
(# $
IUnitOfWork$ /

unitOfWork0 :
): ;
{ 
_unitOfWork 
= 

unitOfWork  
;  !
} 
public 

async 
Task 
< 
bool 
> 
Handle "
(" #
DeleteUserCommand# 4
request5 <
,< =
CancellationToken> O
cancellationTokenP a
)a b
{ 
var 
userSpec 
= 
new !
UserByIdSpecification 0
(0 1
request1 8
.8 9
Id9 ;
); <
;< =
var 
userToDelete 
= 
await  
_unitOfWork! ,
., -
GetRepository- :
<: ;
User; ?
>? @
(@ A
)A B
.B C
FirstOrDefaultAsyncC V
(V W
userSpecW _
,_ `
cancellationTokena r
)r s
;s t
if 

( 
userToDelete 
== 
null  
)  !
{ 	
throw"" 
new"" 
NotFoundException"" '
(""' (
nameof""( .
("". /
User""/ 3
)""3 4
,""4 5
request""6 =
.""= >
Id""> @
)""@ A
;""A B
}## 	
_unitOfWork&& 
.&& 
GetRepository&& !
<&&! "
User&&" &
>&&& '
(&&' (
)&&( )
.&&) *
Delete&&* 0
(&&0 1
userToDelete&&1 =
)&&= >
;&&> ?
await'' 
_unitOfWork'' 
.'' 
SaveChangesAsync'' *
(''* +
cancellationToken''+ <
)''< =
;''= >
return** 
true** 
;** 
}++ 
},, à*
rC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Users\Commands\CreateUserCommandHandler.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Users% *
.* +
Commands+ 3
.3 4

CreateUser4 >
;> ?
public 
class $
CreateUserCommandHandler %
:& '
IRequestHandler( 7
<7 8
CreateUserCommand8 I
,I J
UserDtoK R
>R S
{ 
private 
readonly 
IUnitOfWork  
_unitOfWork! ,
;, -
private 
readonly 
IMapper 
_mapper $
;$ %
private 
readonly 
IPasswordHasher $
_passwordHasher% 4
;4 5
public 
$
CreateUserCommandHandler #
(# $
IUnitOfWork$ /

unitOfWork0 :
,: ;
IMapper< C
mapperD J
,J K
IPasswordHasherL [
passwordHasher\ j
)j k
{ 
_unitOfWork 
= 

unitOfWork  
;  !
_mapper 
= 
mapper 
; 
_passwordHasher 
= 
passwordHasher (
;( )
} 
public 

async 
Task 
< 
UserDto 
> 
Handle %
(% &
CreateUserCommand& 7
request8 ?
,? @
CancellationTokenA R
cancellationTokenS d
)d e
{ 
var!! 
spec!! 
=!! 
new!! $
UserBySicilSpecification!! /
(!!/ 0
request!!0 7
.!!7 8
Sicil!!8 =
)!!= >
;!!> ?
var"" 
existingUser"" 
="" 
await""  
_unitOfWork""! ,
."", -
Users""- 2
.""2 3
FirstOrDefaultAsync""3 F
(""F G
spec""G K
,""K L
cancellationToken""M ^
)""^ _
;""_ `
if## 

(## 
existingUser## 
!=## 
null##  
)##  !
{$$ 	
throw%% 
new%% 
ConflictException%% '
(%%' (
$"%%( *
$str%%* +
{%%+ ,
request%%, 3
.%%3 4
Sicil%%4 9
}%%9 :
$str%%: ^
"%%^ _
)%%_ `
;%%` a
}&& 	
if)) 

()) 
!)) 
request)) 
.)) 
RoleId)) 
.)) 
HasValue)) $
)))$ %
{** 	
throw-- 
new-- 
ValidationException-- )
(--) *
$str--* O
)--O P
;--P Q
}.. 	
var// 
roleSpec// 
=// 
new// !
RoleByIdSpecification// 0
(//0 1
request//1 8
.//8 9
RoleId//9 ?
.//? @
Value//@ E
)//E F
;//F G
var00 
	roleCount00 
=00 
await00 
_unitOfWork00 )
.00) *
Roles00* /
.00/ 0

CountAsync000 :
(00: ;
roleSpec00; C
,00C D
cancellationToken00E V
)00V W
;00W X
if11 

(11 
	roleCount11 
==11 
$num11 
)11 
{22 	
throw33 
new33 
NotFoundException33 '
(33' (
nameof33( .
(33. /
Role33/ 3
)333 4
,334 5
request336 =
.33= >
RoleId33> D
.33D E
Value33E J
)33J K
;33K L
}44 	
var66 
newUser66 
=66 
new66 
User66 
{77 	
Sicil88 
=88 
request88 
.88 
Sicil88 !
,88! "
Adi99 
=99 
request99 
.99 
Adi99 
,99 
Soyadi:: 
=:: 
request:: 
.:: 
Soyadi:: #
,::# $
PasswordHash<< 
=<< 
_passwordHasher<< *
.<<* +
HashPassword<<+ 7
(<<7 8
request<<8 ?
.<<? @
Password<<@ H
)<<H I
,<<I J
RoleId== 
=== 
request== 
.== 
RoleId== #
.==# $
Value==$ )
}?? 	
;??	 

awaitAA 
_unitOfWorkAA 
.AA 
UsersAA 
.AA  
AddAsyncAA  (
(AA( )
newUserAA) 0
,AA0 1
cancellationTokenAA2 C
)AAC D
;AAD E
awaitBB 
_unitOfWorkBB 
.BB 
SaveChangesAsyncBB *
(BB* +
cancellationTokenBB+ <
)BB< =
;BB= >
varDD 
userDtoDD 
=DD 
_mapperDD 
.DD 
MapDD !
<DD! "
UserDtoDD" )
>DD) *
(DD* +
newUserDD+ 2
)DD2 3
;DD3 4
returnEE 
userDtoEE 
;EE 
}FF 
}GG Ù
kC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Users\Commands\CreateUserCommand.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Users% *
.* +
Commands+ 3
{ 
public 

class 
CreateUserCommand "
:# $
IRequest% -
<- .
UserDto. 5
>5 6
{ 
public 
string 
Adi 
{ 
get 
;  
set! $
;$ %
}& '
=( )
string* 0
.0 1
Empty1 6
;6 7
public		 
string		 
Soyadi		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
=		+ ,
string		- 3
.		3 4
Empty		4 9
;		9 :
public

 
string

 
Password

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
=

- .
string

/ 5
.

5 6
Empty

6 ;
;

; <
public 
bool 
IsAdmin 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
? 
RoleId 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Sicil 
{ 
get !
;! "
set# &
;& '
}( )
=* +
string, 2
.2 3
Empty3 8
;8 9
} 
} •
|C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Roles\Queries\GetRoleById\GetRoleByIdQueryHandler.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Roles% *
.* +
Queries+ 2
.2 3
GetRoleById3 >
;> ?
public 
class #
GetRoleByIdQueryHandler $
:% &
IRequestHandler' 6
<6 7
GetRoleByIdQuery7 G
,G H
RoleDtoI P
>P Q
{ 
private 
readonly 
IUnitOfWork  
_unitOfWork! ,
;, -
private 
readonly 
IMapper 
_mapper $
;$ %
public 
#
GetRoleByIdQueryHandler "
(" #
IUnitOfWork# .

unitOfWork/ 9
,9 :
IMapper; B
mapperC I
)I J
{ 
_unitOfWork 
= 

unitOfWork  
;  !
_mapper 
= 
mapper 
; 
} 
public"" 

async"" 
Task"" 
<"" 
RoleDto"" 
>"" 
Handle"" %
(""% &
GetRoleByIdQuery""& 6
request""7 >
,""> ?
CancellationToken""@ Q
cancellationToken""R c
)""c d
{## 
var%% 
spec%% 
=%% 
new%% !
RoleByIdSpecification%% ,
(%%, -
request%%- 4
.%%4 5
Id%%5 7
)%%7 8
;%%8 9
var&& 
role&& 
=&& 
await&& 
_unitOfWork&& $
.&&$ %
GetRepository&&% 2
<&&2 3
Role&&3 7
>&&7 8
(&&8 9
)&&9 :
.&&: ;
FirstOrDefaultAsync&&; N
(&&N O
spec&&O S
,&&S T
cancellationToken&&U f
)&&f g
;&&g h
if(( 

((( 
role(( 
==(( 
null(( 
)(( 
{)) 	
throw** 
new** 
NotFoundException** '
(**' (
nameof**( .
(**. /
Role**/ 3
)**3 4
,**4 5
request**6 =
.**= >
Id**> @
)**@ A
;**A B
}++ 	
var-- 
roleDto-- 
=-- 
_mapper-- 
.-- 
Map-- !
<--! "
RoleDto--" )
>--) *
(--* +
role--+ /
)--/ 0
;--0 1
return.. 
roleDto.. 
;.. 
}// 
}00 è
uC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Roles\Queries\GetRoleById\GetRoleByIdQuery.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Roles% *
.* +
Queries+ 2
.2 3
GetRoleById3 >
{ 
public		 

class		 
GetRoleByIdQuery		 !
:		" #
IRequest		$ ,
<		, -
RoleDto		- 4
>		4 5
{

 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
GetRoleByIdQuery 
(  
int  #
id$ &
)& '
{ 	
Id 
= 
id 
; 
} 	
} 
} Ó
|C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Roles\Queries\GetAllRoles\GetAllRolesQueryHandler.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Roles% *
.* +
Queries+ 2
.2 3
GetAllRoles3 >
;> ?
public 
class #
GetAllRolesQueryHandler $
:% &
IRequestHandler' 6
<6 7
GetAllRolesQuery7 G
,G H
IEnumerableI T
<T U
RoleDtoU \
>\ ]
>] ^
{ 
private 
readonly 
IUnitOfWork  
_unitOfWork! ,
;, -
private 
readonly 
IMapper 
_mapper $
;$ %
public 
#
GetAllRolesQueryHandler "
(" #
IUnitOfWork# .

unitOfWork/ 9
,9 :
IMapper; B
mapperC I
)I J
{ 
_unitOfWork 
= 

unitOfWork  
;  !
_mapper 
= 
mapper 
; 
} 
public!! 

async!! 
Task!! 
<!! 
IEnumerable!! !
<!!! "
RoleDto!!" )
>!!) *
>!!* +
Handle!!, 2
(!!2 3
GetAllRolesQuery!!3 C
request!!D K
,!!K L
CancellationToken!!M ^
cancellationToken!!_ p
)!!p q
{"" 
var## 
spec## 
=## 
new## '
RolesWithUsersSpecification## 2
(##2 3
)##3 4
;##4 5
var$$ 
roles$$ 
=$$ 
await$$ 
_unitOfWork$$ %
.$$% &
Roles$$& +
.$$+ ,
	ListAsync$$, 5
($$5 6
spec$$6 :
,$$: ;
cancellationToken$$< M
)$$M N
;$$N O
return'' 
_mapper'' 
.'' 
Map'' 
<'' 
IEnumerable'' &
<''& '
RoleDto''' .
>''. /
>''/ 0
(''0 1
roles''1 6
)''6 7
;''7 8
}(( 
})) Ê
uC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Roles\Queries\GetAllRoles\GetAllRolesQuery.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Roles% *
.* +
Queries+ 2
.2 3
GetAllRoles3 >
{ 
public

 

class

 
GetAllRolesQuery

 !
:

" #
IRequest

$ ,
<

, -
IEnumerable

- 8
<

8 9
RoleDto

9 @
>

@ A
>

A B
{ 
} 
} ı!
qC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Roles\Handlers\GetRoleByIdQueryHandler.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Roles% *
.* +
Handlers+ 3
{ 
public 

class #
GetRoleByIdQueryHandler (
:) *
IRequestHandler+ :
<: ;
GetRoleByIdQuery; K
,K L
RoleDtoM T
>T U
{ 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
private 
readonly 
IMapper  
_mapper! (
;( )
private 
readonly 
ILocalLogger %
_logger& -
;- .
public #
GetRoleByIdQueryHandler &
(& '
IUnitOfWork' 2

unitOfWork3 =
,= >
IMapper? F
mapperG M
,M N
ILocalLoggerO [
logger\ b
)b c
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
_mapper 
= 
mapper 
; 
_logger 
= 
logger 
; 
} 	
public!! 
async!! 
Task!! 
<!! 
RoleDto!! !
>!!! "
Handle!!# )
(!!) *
GetRoleByIdQuery!!* :
request!!; B
,!!B C
CancellationToken!!D U
cancellationToken!!V g
)!!g h
{"" 	
_logger## 
.## 
LogInformation## "
(##" #
$str### I
,##I J
request##K R
.##R S
Id##S U
)##U V
;##V W
var%% 
roleSpec%% 
=%% 
new%% !
RoleByIdSpecification%% 4
(%%4 5
request%%5 <
.%%< =
Id%%= ?
)%%? @
;%%@ A
var&& 
role&& 
=&& 
await&& 
_unitOfWork&& (
.&&( )
Roles&&) .
.&&. /
FirstOrDefaultAsync&&/ B
(&&B C
roleSpec&&C K
,&&K L
cancellationToken&&M ^
)&&^ _
;&&_ `
if(( 
((( 
role(( 
==(( 
null(( 
)(( 
{)) 
_logger** 
.** 

LogWarning** "
(**" #
$str**# H
,**H I
request**J Q
.**Q R
Id**R T
)**T U
;**U V
var++ 
notFoundException++ %
=++& '
new++( +
NotFoundException++, =
(++= >
LogMessages++> I
.++I J
RoleNotFoundById++J Z
,++Z [
request++\ c
.++c d
Id++d f
.++f g
ToString++g o
(++o p
)++p q
)++q r
;++r s
_logger,, 
.,, 
LogError,,  
(,,  !
notFoundException,,! 2
,,,2 3
notFoundException,,4 E
.,,E F
Message,,F M
),,M N
;,,N O
throw-- 
notFoundException-- '
;--' (
}.. 
var00 
roleDto00 
=00 
_mapper00 !
.00! "
Map00" %
<00% &
RoleDto00& -
>00- .
(00. /
role00/ 3
)003 4
;004 5
var44 
userCountSpec44 
=44 
new44  #%
UserByRoleIdSpecification44$ =
(44= >
role44> B
.44B C
Id44C E
)44E F
;44F G
roleDto55 
.55 
	UserCount55 
=55 
await55  %
_unitOfWork55& 1
.551 2
Users552 7
.557 8

CountAsync558 B
(55B C
userCountSpec55C P
,55P Q
cancellationToken55R c
)55c d
;55d e
_logger77 
.77 
LogInformation77 "
(77" #
$str77# Q
,77Q R
request77S Z
.77Z [
Id77[ ]
)77] ^
;77^ _
return88 
roleDto88 
;88 
}99 	
}:: 
};; ﬂ
qC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Roles\Handlers\GetAllRolesQueryHandler.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Roles% *
.* +
Handlers+ 3
{ 
public 

class #
GetAllRolesQueryHandler (
:) *
IRequestHandler+ :
<: ;
GetAllRolesQuery; K
,K L
IEnumerableM X
<X Y
RoleDtoY `
>` a
>a b
{ 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
private 
readonly 
IMapper  
_mapper! (
;( )
private 
readonly 
ILogger  
<  !#
GetAllRolesQueryHandler! 8
>8 9
_logger: A
;A B
public #
GetAllRolesQueryHandler &
(& '
IUnitOfWork' 2

unitOfWork3 =
,= >
IMapper? F
mapperG M
,M N
ILoggerO V
<V W#
GetAllRolesQueryHandlerW n
>n o
loggerp v
)v w
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
_mapper 
= 
mapper 
; 
_logger 
= 
logger 
; 
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
RoleDto& -
>- .
>. /
Handle0 6
(6 7
GetAllRolesQuery7 G
requestH O
,O P
CancellationTokenQ b
cancellationTokenc t
)t u
{   	
_logger!! 
.!! 
LogInformation!! "
(!!" #
$str!!# <
)!!< =
;!!= >
var'' 
roles'' 
='' 
await'' 
_unitOfWork'' )
.'') *
Roles''* /
.''/ 0
	ListAsync''0 9
(''9 :
null'': >
!''> ?
,''? @
cancellationToken''A R
)''R S
;''S T
var** 
roleDtos** 
=** 
_mapper** "
.**" #
Map**# &
<**& '
List**' +
<**+ ,
RoleDto**, 3
>**3 4
>**4 5
(**5 6
roles**6 ;
)**; <
;**< =
foreach.. 
(.. 
var.. 
dto.. 
in.. 
roleDtos..  (
)..( )
{// 
var00 
userCountSpec00 !
=00" #
new00$ '%
UserByRoleIdSpecification00( A
(00A B
dto00B E
.00E F
Id00F H
)00H I
;00I J
dto11 
.11 
	UserCount11 
=11 
await11  %
_unitOfWork11& 1
.111 2
Users112 7
.117 8

CountAsync118 B
(11B C
userCountSpec11C P
,11P Q
cancellationToken11R c
)11c d
;11d e
}22 
_logger44 
.44 
LogInformation44 #
(44# $
$str44$ O
,44O P
roleDtos44Q Y
.44Y Z
Count44Z _
)44_ `
;44` a
return55 
roleDtos55 
;55 
}66 	
}77 
};; ã"
rC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Roles\Handlers\CreateRoleCommandHandler.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Roles% *
.* +
Handlers+ 3
{ 
public 

class $
CreateRoleCommandHandler )
:* +
IRequestHandler, ;
<; <
CreateRoleCommand< M
,M N
RoleDtoO V
>V W
{ 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
private 
readonly 
IMapper  
_mapper! (
;( )
private 
readonly 
ILogger  
<  !$
CreateRoleCommandHandler! 9
>9 :
_logger; B
;B C
public $
CreateRoleCommandHandler '
(' (
IUnitOfWork( 3

unitOfWork4 >
,> ?
IMapper@ G
mapperH N
,N O
ILoggerP W
<W X$
CreateRoleCommandHandlerX p
>p q
loggerr x
)x y
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
_mapper 
= 
mapper 
; 
_logger 
= 
logger 
; 
} 	
public 
async 
Task 
< 
RoleDto !
>! "
Handle# )
() *
CreateRoleCommand* ;
request< C
,C D
CancellationTokenE V
cancellationTokenW h
)h i
{   	
_logger!! 
.!! 
LogInformation!! "
(!!" #
$str!!# U
,!!U V
request!!W ^
.!!^ _
Name!!_ c
)!!c d
;!!d e
var$$ 
existingRoleSpec$$  
=$$! "
new$$# &#
RoleByNameSpecification$$' >
($$> ?
request$$? F
.$$F G
Name$$G K
)$$K L
;$$L M
var%% 
existingRoleCount%% !
=%%" #
await%%$ )
_unitOfWork%%* 5
.%%5 6
Roles%%6 ;
.%%; <

CountAsync%%< F
(%%F G
existingRoleSpec%%G W
,%%W X
cancellationToken%%Y j
)%%j k
;%%k l
if&& 
(&& 
existingRoleCount&& !
>&&" #
$num&&$ %
)&&% &
{'' 
_logger(( 
.(( 

LogWarning(( "
(((" #
$str((# N
,((N O
request((P W
.((W X
Name((X \
)((\ ]
;((] ^
throw)) 
new)) 
ValidationException)) -
())- .
$")). 0
$str))0 1
{))1 2
request))2 9
.))9 :
Name)): >
}))> ?
$str))? ]
"))] ^
)))^ _
;))_ `
}** 
var,, 
role,, 
=,, 
_mapper,, 
.,, 
Map,, "
<,," #
Role,,# '
>,,' (
(,,( )
request,,) 0
),,0 1
;,,1 2
await.. 
_unitOfWork.. 
... 
Roles.. #
...# $
AddAsync..$ ,
(.., -
role..- 1
,..1 2
cancellationToken..3 D
)..D E
;..E F
await// 
_unitOfWork// 
.// 
SaveChangesAsync// .
(//. /
)/// 0
;//0 1
_logger11 
.11 
LogInformation11 "
(11" #
$str11# \
,11\ ]
role11^ b
.11b c
Name11c g
,11g h
role11i m
.11m n
Id11n p
)11p q
;11q r
var44 
roleDto44 
=44 
_mapper44 !
.44! "
Map44" %
<44% &
RoleDto44& -
>44- .
(44. /
role44/ 3
)443 4
;444 5
roleDto55 
.55 
	UserCount55 
=55 
$num55  !
;55! "
return77 
roleDto77 
;77 
}88 	
}99 
}:: ⁄
C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Roles\Commands\UpdateRole\UpdateRoleCommandValidator.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Roles% *
.* +
Commands+ 3
.3 4

UpdateRole4 >
;> ?
public 
class &
UpdateRoleCommandValidator '
:( )
AbstractValidator* ;
<; <
UpdateRoleCommand< M
>M N
{		 
public

 
&
UpdateRoleCommandValidator

 %
(

% &
)

& '
{ 
RuleFor 
( 
v 
=> 
v 
. 
Id 
) 
. 
GreaterThan 
( 
$num 
) 
. 
WithMessage '
(' (
$str( J
)J K
;K L
RuleFor 
( 
v 
=> 
v 
. 
Name 
) 
. 
NotEmpty 
( 
) 
. 
WithMessage #
(# $
$str$ 9
)9 :
. 
MaximumLength 
( 
$num 
) 
. 
WithMessage *
(* +
$str+ P
)P Q
;Q R
} 
} §$
}C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Roles\Commands\UpdateRole\UpdateRoleCommandHandler.cs
	namespace

 	
Stock


 
.

 
Application

 
.

 
Features

 $
.

$ %
Roles

% *
.

* +
Commands

+ 3
.

3 4

UpdateRole

4 >
;

> ?
public 
class $
UpdateRoleCommandHandler %
:& '
IRequestHandler( 7
<7 8
UpdateRoleCommand8 I
,I J
boolK O
>O P
{ 
private 
readonly 
IUnitOfWork  
_unitOfWork! ,
;, -
private 
readonly 
IMapper 
_mapper $
;$ %
public 
$
UpdateRoleCommandHandler #
(# $
IUnitOfWork$ /

unitOfWork0 :
,: ;
IMapper< C
mapperD J
)J K
{ 
_unitOfWork 
= 

unitOfWork  
;  !
_mapper 
= 
mapper 
; 
} 
public"" 

async"" 
Task"" 
<"" 
bool"" 
>"" 
Handle"" "
(""" #
UpdateRoleCommand""# 4
request""5 <
,""< =
CancellationToken""> O
cancellationToken""P a
)""a b
{## 
var%% 
spec%% 
=%% 
new%% !
RoleByIdSpecification%% ,
(%%, -
request%%- 4
.%%4 5
Id%%5 7
)%%7 8
;%%8 9
var&& 
roleToUpdate&& 
=&& 
await&&  
_unitOfWork&&! ,
.&&, -
GetRepository&&- :
<&&: ;
Role&&; ?
>&&? @
(&&@ A
)&&A B
.&&B C
FirstOrDefaultAsync&&C V
(&&V W
spec&&W [
,&&[ \
cancellationToken&&] n
)&&n o
;&&o p
if(( 

((( 
roleToUpdate(( 
==(( 
null((  
)((  !
{)) 	
throw** 
new** 
NotFoundException** '
(**' (
nameof**( .
(**. /
Role**/ 3
)**3 4
,**4 5
request**6 =
.**= >
Id**> @
)**@ A
;**A B
}++ 	
if.. 

(.. 
!.. 
string.. 
... 
IsNullOrWhiteSpace.. &
(..& '
request..' .
.... /
Name../ 3
)..3 4
&&..5 7
roleToUpdate..8 D
...D E
Name..E I
!=..J L
request..M T
...T U
Name..U Y
)..Y Z
{// 	
var00 
nameCheckSpec00 
=00 
new00  ##
RoleByNameSpecification00$ ;
(00; <
request00< C
.00C D
Name00D H
)00H I
;00I J
var11 $
existingRoleWithSameName11 (
=11) *
await11+ 0
_unitOfWork111 <
.11< =
GetRepository11= J
<11J K
Role11K O
>11O P
(11P Q
)11Q R
.11R S
FirstOrDefaultAsync11S f
(11f g
nameCheckSpec11g t
,11t u
cancellationToken	11v á
)
11á à
;
11à â
if22 
(22 $
existingRoleWithSameName22 (
!=22) +
null22, 0
&&221 3$
existingRoleWithSameName224 L
.22L M
Id22M O
!=22P R
request22S Z
.22Z [
Id22[ ]
)22] ^
{33 
throw44 
new44 
ConflictException44 +
(44+ ,
$"44, .
$str44. /
{44/ 0
request440 7
.447 8
Name448 <
}44< =
$str44= a
"44a b
)44b c
;44c d
}55 
roleToUpdate66 
.66 
Name66 
=66 
request66  '
.66' (
Name66( ,
;66, -
}77 	
_unitOfWork<< 
.<< 
GetRepository<< !
<<<! "
Role<<" &
><<& '
(<<' (
)<<( )
.<<) *
Update<<* 0
(<<0 1
roleToUpdate<<1 =
)<<= >
;<<> ?
await== 
_unitOfWork== 
.== 
SaveChangesAsync== *
(==* +
cancellationToken==+ <
)==< =
;=== >
return?? 
true?? 
;?? 
}@@ 
}AA €
vC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Roles\Commands\UpdateRole\UpdateRoleCommand.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Roles% *
.* +
Commands+ 3
.3 4

UpdateRole4 >
{ 
public		 

class		 
UpdateRoleCommand		 "
:		# $
IRequest		% -
<		- .
bool		. 2
>		2 3
{

 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
? 
Description "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} Ê
}C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Roles\Commands\DeleteRole\DeleteRoleCommandHandler.cs
	namespace		 	
Stock		
 
.		 
Application		 
.		 
Features		 $
.		$ %
Roles		% *
.		* +
Commands		+ 3
.		3 4

DeleteRole		4 >
;		> ?
public 
class $
DeleteRoleCommandHandler %
:& '
IRequestHandler( 7
<7 8
DeleteRoleCommand8 I
,I J
boolK O
>O P
{ 
private 
readonly 
IUnitOfWork  
_unitOfWork! ,
;, -
public 
$
DeleteRoleCommandHandler #
(# $
IUnitOfWork$ /

unitOfWork0 :
): ;
{ 
_unitOfWork 
= 

unitOfWork  
;  !
} 
public 

async 
Task 
< 
bool 
> 
Handle "
(" #
DeleteRoleCommand# 4
request5 <
,< =
CancellationToken> O
cancellationTokenP a
)a b
{   
var!! 
spec!! 
=!! 
new!! !
RoleByIdSpecification!! ,
(!!, -
request!!- 4
.!!4 5
Id!!5 7
)!!7 8
;!!8 9
var"" 
roleToDelete"" 
="" 
await""  
_unitOfWork""! ,
."", -
Roles""- 2
.""2 3
FirstOrDefaultAsync""3 F
(""F G
spec""G K
,""K L
cancellationToken""M ^
)""^ _
;""_ `
if$$ 

($$ 
roleToDelete$$ 
==$$ 
null$$  
)$$  !
{%% 	
throw&& 
new&& 
NotFoundException&& '
(&&' (
nameof&&( .
(&&. /
Role&&/ 3
)&&3 4
,&&4 5
request&&6 =
.&&= >
Id&&> @
)&&@ A
;&&A B
}'' 	
_unitOfWork11 
.11 
Roles11 
.11 
Delete11  
(11  !
roleToDelete11! -
)11- .
;11. /
await22 
_unitOfWork22 
.22 
SaveChangesAsync22 *
(22* +
cancellationToken22+ <
)22< =
;22= >
return44 
true44 
;44 
}55 
}66 ˛
vC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Roles\Commands\DeleteRole\DeleteRoleCommand.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Roles% *
.* +
Commands+ 3
.3 4

DeleteRole4 >
;> ?
public 
class 
DeleteRoleCommand 
:  
IRequest! )
<) *
bool* .
>. /
{		 
public 

int 
Id 
{ 
get 
; 
set 
; 
} 
public 

DeleteRoleCommand 
( 
int  
id! #
)# $
{ 
Id 

= 
id 
; 
} 
} õ	
C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Roles\Commands\CreateRole\CreateRoleCommandValidator.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Roles% *
.* +
Commands+ 3
.3 4

CreateRole4 >
;> ?
public 
class &
CreateRoleCommandValidator '
:( )
AbstractValidator* ;
<; <
CreateRoleCommand< M
>M N
{		 
public

 
&
CreateRoleCommandValidator

 %
(

% &
)

& '
{ 
RuleFor 
( 
v 
=> 
v 
. 
Name 
) 
. 
NotEmpty 
( 
) 
. 
WithMessage #
(# $
$str$ 9
)9 :
. 
MaximumLength 
( 
$num 
) 
. 
WithMessage *
(* +
$str+ P
)P Q
;Q R
} 
} ã
}C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Roles\Commands\CreateRole\CreateRoleCommandHandler.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Roles% *
.* +
Commands+ 3
.3 4

CreateRole4 >
;> ?
public 
class $
CreateRoleCommandHandler %
:& '
IRequestHandler( 7
<7 8
CreateRoleCommand8 I
,I J
RoleDtoK R
>R S
{ 
private 
readonly 
IUnitOfWork  
_unitOfWork! ,
;, -
private 
readonly 
IMapper 
_mapper $
;$ %
public 
$
CreateRoleCommandHandler #
(# $
IUnitOfWork$ /

unitOfWork0 :
,: ;
IMapper< C
mapperD J
)J K
{ 
_unitOfWork 
= 

unitOfWork  
;  !
_mapper 
= 
mapper 
; 
} 
public"" 

async"" 
Task"" 
<"" 
RoleDto"" 
>"" 
Handle"" %
(""% &
CreateRoleCommand""& 7
request""8 ?
,""? @
CancellationToken""A R
cancellationToken""S d
)""d e
{## 
var%% 
spec%% 
=%% 
new%% #
RoleByNameSpecification%% .
(%%. /
request%%/ 6
.%%6 7
Name%%7 ;
)%%; <
;%%< =
var&& 
existingRole&& 
=&& 
await&&  
_unitOfWork&&! ,
.&&, -
GetRepository&&- :
<&&: ;
Role&&; ?
>&&? @
(&&@ A
)&&A B
.&&B C
FirstOrDefaultAsync&&C V
(&&V W
spec&&W [
,&&[ \
cancellationToken&&] n
)&&n o
;&&o p
if(( 

((( 
existingRole(( 
!=(( 
null((  
)((  !
{)) 	
throw** 
new** 
ConflictException** '
(**' (
$"**( *
$str*** +
{**+ ,
request**, 3
.**3 4
Name**4 8
}**8 9
$str**9 W
"**W X
)**X Y
;**Y Z
}++ 	
var-- 
newRole-- 
=-- 
new-- 
Role-- 
{.. 	
Name// 
=// 
request// 
.// 
Name// 
}11 	
;11	 

await33 
_unitOfWork33 
.33 
GetRepository33 '
<33' (
Role33( ,
>33, -
(33- .
)33. /
.33/ 0
AddAsync330 8
(338 9
newRole339 @
,33@ A
cancellationToken33B S
)33S T
;33T U
await44 
_unitOfWork44 
.44 
SaveChangesAsync44 *
(44* +
cancellationToken44+ <
)44< =
;44= >
var66 
roleDto66 
=66 
_mapper66 
.66 
Map66 !
<66! "
RoleDto66" )
>66) *
(66* +
newRole66+ 2
)662 3
;663 4
return77 
roleDto77 
;77 
}88 
}99 À
vC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Roles\Commands\CreateRole\CreateRoleCommand.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Roles% *
.* +
Commands+ 3
.3 4

CreateRole4 >
{ 
public

 

class

 
CreateRoleCommand

 "
:

# $
IRequest

% -
<

- .
RoleDto

. 5
>

5 6
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
? 
Description "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} ûI
kC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Products\Services\ProductService.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Products% -
.- .
Services. 6
{ 
public		 

class		 
ProductService		 
:		  !
IProductService		" 1
{

 
private 
readonly 
IProductRepository +
_productRepository, >
;> ?
public 
ProductService 
( 
IProductRepository 0
productRepository1 B
)B C
{ 	
_productRepository 
=  
productRepository! 2
;2 3
} 	
public 
async 
Task 
< 

ProductDto $
>$ %
GetProductByIdAsync& 9
(9 :
int: =
id> @
)@ A
{ 	
var 
product 
= 
await 
_productRepository  2
.2 3
GetByIdAsync3 ?
(? @
id@ B
)B C
;C D
if 
( 
product 
== 
null 
)  
throw 
new  
KeyNotFoundException .
(. /
$"/ 1
$str1 A
{A B
idB D
}D E
$strE P
"P Q
)Q R
;R S
return 
MapToDto 
( 
product #
)# $
;$ %
} 	
public 
async 
Task 
< 
IEnumerable %
<% &

ProductDto& 0
>0 1
>1 2
GetAllProductsAsync3 F
(F G
)G H
{ 	
var 
products 
= 
await  
_productRepository! 3
.3 4
GetAllAsync4 ?
(? @
)@ A
;A B
return 
products 
. 
Select "
(" #
MapToDto# +
)+ ,
;, -
} 	
public!! 
async!! 
Task!! 
<!! 

ProductDto!! $
>!!$ %
CreateProductAsync!!& 8
(!!8 9
CreateProductDto!!9 I
createProductDto!!J Z
)!!Z [
{"" 	
var## 
product## 
=## 
Product## !
.##! "
Create##" (
(##( )
ProductName$$ 
.$$ 
From$$  
($$  !
createProductDto$$! 1
.$$1 2
Name$$2 6
)$$6 7
,$$7 8
createProductDto%%  
.%%  !
Description%%! ,
!=%%- /
null%%0 4
?%%5 6
ProductDescription%%7 I
.%%I J
From%%J N
(%%N O
createProductDto%%O _
.%%_ `
Description%%` k
)%%k l
:%%m n
null%%o s
,%%s t

StockLevel&& 
.&& 
From&& 
(&&  
createProductDto&&  0
.&&0 1
StockQuantity&&1 >
)&&> ?
,&&? @
createProductDto''  
.''  !

CategoryId''! +
)''+ ,
;'', -
var)) 
createdProduct)) 
=))  
await))! &
_productRepository))' 9
.))9 :
AddAsync)): B
())B C
product))C J
)))J K
;))K L
return** 
MapToDto** 
(** 
createdProduct** *
)*** +
;**+ ,
}++ 	
public-- 
async-- 
Task-- 
UpdateProductAsync-- ,
(--, -
UpdateProductDto--- =
updateProductDto--> N
)--N O
{.. 	
var// 
product// 
=// 
await// 
_productRepository//  2
.//2 3
GetByIdAsync//3 ?
(//? @
updateProductDto//@ P
.//P Q
Id//Q S
)//S T
;//T U
if00 
(00 
product00 
==00 
null00 
)00  
throw11 
new11  
KeyNotFoundException11 .
(11. /
$"11/ 1
$str111 A
{11A B
updateProductDto11B R
.11R S
Id11S U
}11U V
$str11V a
"11a b
)11b c
;11c d
product33 
.33 

UpdateName33 
(33 
ProductName33 *
.33* +
From33+ /
(33/ 0
updateProductDto330 @
.33@ A
Name33A E
)33E F
)33F G
;33G H
product44 
.44 
UpdateDescription44 %
(44% &
updateProductDto44& 6
.446 7
Description447 B
!=44C E
null44F J
?44K L
ProductDescription44M _
.44_ `
From44` d
(44d e
updateProductDto44e u
.44u v
Description	44v Å
)
44Å Ç
:
44É Ñ
null
44Ö â
)
44â ä
;
44ä ã
var77 
currentStock77 
=77 
(77  
int77  #
)77# $
product77$ +
.77+ ,

StockLevel77, 6
;776 7
if88 
(88 
updateProductDto88  
.88  !
StockQuantity88! .
>88/ 0
currentStock881 =
)88= >
{99 
product:: 
.:: 
IncreaseStock:: %
(::% &
updateProductDto::& 6
.::6 7
StockQuantity::7 D
-::E F
currentStock::G S
)::S T
;::T U
};; 
else<< 
if<< 
(<< 
updateProductDto<< %
.<<% &
StockQuantity<<& 3
<<<4 5
currentStock<<6 B
)<<B C
{== 
product>> 
.>> 
DecreaseStock>> %
(>>% &
currentStock>>& 2
->>3 4
updateProductDto>>5 E
.>>E F
StockQuantity>>F S
)>>S T
;>>T U
}?? 
ifBB 
(BB 
productBB 
.BB 

CategoryIdBB "
!=BB# %
updateProductDtoBB& 6
.BB6 7

CategoryIdBB7 A
)BBA B
{CC 
productDD 
.DD 
ChangeCategoryDD &
(DD& '
updateProductDtoDD' 7
.DD7 8

CategoryIdDD8 B
)DDB C
;DDC D
}EE 
awaitGG 
_productRepositoryGG $
.GG$ %
UpdateAsyncGG% 0
(GG0 1
productGG1 8
)GG8 9
;GG9 :
}HH 	
publicJJ 
asyncJJ 
TaskJJ 
DeleteProductAsyncJJ ,
(JJ, -
intJJ- 0
idJJ1 3
)JJ3 4
{KK 	
varLL 
productLL 
=LL 
awaitLL 
_productRepositoryLL  2
.LL2 3
GetByIdAsyncLL3 ?
(LL? @
idLL@ B
)LLB C
;LLC D
ifMM 
(MM 
productMM 
==MM 
nullMM 
)MM  
throwNN 
newNN  
KeyNotFoundExceptionNN .
(NN. /
$"NN/ 1
$strNN1 A
{NNA B
idNNB D
}NND E
$strNNE P
"NNP Q
)NNQ R
;NNR S
awaitPP 
_productRepositoryPP $
.PP$ %
DeleteAsyncPP% 0
(PP0 1
productPP1 8
)PP8 9
;PP9 :
}QQ 	
privateSS 
staticSS 

ProductDtoSS !
MapToDtoSS" *
(SS* +
ProductSS+ 2
productSS3 :
)SS: ;
{TT 	
returnUU 
newUU 

ProductDtoUU !
{VV 
IdWW 
=WW 
productWW 
.WW 
IdWW 
,WW  
NameXX 
=XX 
productXX 
.XX 
NameXX #
,XX# $
DescriptionYY 
=YY 
productYY %
.YY% &
DescriptionYY& 1
,YY1 2
StockQuantityZZ 
=ZZ 
productZZ  '
.ZZ' (

StockLevelZZ( 2
.ZZ2 3
ValueZZ3 8
,ZZ8 9

CategoryId[[ 
=[[ 
product[[ $
.[[$ %

CategoryId[[% /
,[[/ 0
CategoryName\\ 
=\\ 
product\\ &
.\\& '
Category\\' /
?\\/ 0
.\\0 1
Name\\1 5
,\\5 6
	CreatedAt]] 
=]] 
product]] #
.]]# $
	CreatedAt]]$ -
,]]- .
	UpdatedAt^^ 
=^^ 
product^^ #
.^^# $
	UpdatedAt^^$ -
,^^- .
	CreatedBy__ 
=__ 
product__ #
.__# $
	CreatedBy__$ -
,__- .
	UpdatedBy`` 
=`` 
product`` #
.``# $
	UpdatedBy``$ -
,``- .
	IsDeletedaa 
=aa 
productaa #
.aa# $
	IsDeletedaa$ -
}bb 
;bb 
}cc 	
}dd 
}ee ù

lC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Products\Services\IProductService.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Products% -
.- .
Services. 6
{ 
public 

	interface 
IProductService $
{ 
Task 
< 

ProductDto 
> 
GetProductByIdAsync ,
(, -
int- 0
id1 3
)3 4
;4 5
Task 
< 
IEnumerable 
< 

ProductDto #
># $
>$ %
GetAllProductsAsync& 9
(9 :
): ;
;; <
Task		 
<		 

ProductDto		 
>		 
CreateProductAsync		 +
(		+ ,
CreateProductDto		, <
createProductDto		= M
)		M N
;		N O
Task

 
UpdateProductAsync

 
(

  
UpdateProductDto

  0
updateProductDto

1 A
)

A B
;

B C
Task 
DeleteProductAsync 
(  
int  #
id$ &
)& '
;' (
} 
} ∆
ÖC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Products\Queries\GetProductById\GetProductByIdQueryHandler.cs
	namespace

 	
Stock


 
.

 
Application

 
.

 
Features

 $
.

$ %
Products

% -
.

- .
Queries

. 5
.

5 6
GetProductById

6 D
{ 
public 

class &
GetProductByIdQueryHandler +
:, -
IRequestHandler. =
<= >
GetProductByIdQuery> Q
,Q R

ProductDtoS ]
?] ^
>^ _
{ 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
private 
readonly 
IMapper  
_mapper! (
;( )
public &
GetProductByIdQueryHandler )
() *
IUnitOfWork* 5

unitOfWork6 @
,@ A
IMapperB I
mapperJ P
)P Q
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
_mapper 
= 
mapper 
; 
} 	
public 
async 
Task 
< 

ProductDto $
?$ %
>% &
Handle' -
(- .
GetProductByIdQuery. A
requestB I
,I J
CancellationTokenK \
cancellationToken] n
)n o
{ 	
var 
spec 
= 
new 0
$ProductByIdWithCategorySpecification ?
(? @
request@ G
.G H
IdH J
)J K
;K L
var 
product 
= 
await 
_unitOfWork  +
.+ ,
GetRepository, 9
<9 :
Product: A
>A B
(B C
)C D
.D E
FirstOrDefaultAsyncE X
(X Y
specY ]
,] ^
cancellationToken_ p
)p q
;q r
if 
( 
product 
== 
null 
)  
{ 
return   
null   
;   
}!! 
return## 
_mapper## 
.## 
Map## 
<## 

ProductDto## )
>##) *
(##* +
product##+ 2
)##2 3
;##3 4
}$$ 	
}%% 
public(( 

class(( 0
$ProductByIdWithCategorySpecification(( 5
:((6 7
BaseSpecification((8 I
<((I J
Product((J Q
>((Q R
{)) 
public** 0
$ProductByIdWithCategorySpecification** 3
(**3 4
int**4 7
	productId**8 A
)**A B
:++ 
base++ 
(++ 
p++ 
=>++ 
p++ 
.++ 
Id++ 
==++ 
	productId++  )
)++) *
{,, 	

AddInclude-- 
(-- 
p-- 
=>-- 
p-- 
.-- 
Category-- &
)--& '
;--' (
}.. 	
}// 
}00 ∂
~C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Products\Queries\GetProductById\GetProductByIdQuery.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Products% -
.- .
Queries. 5
.5 6
GetProductById6 D
{ 
public 

class 
GetProductByIdQuery $
:% &
IRequest' /
</ 0

ProductDto0 :
?: ;
>; <
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public

 
GetProductByIdQuery

 "
(

" #
int

# &
id

' )
)

) *
{ 	
Id 
= 
id 
; 
} 	
} 
} Ï
ÖC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Products\Queries\GetAllProducts\GetAllProductsQueryHandler.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Products% -
.- .
Queries. 5
.5 6
GetAllProducts6 D
{ 
public 

class &
GetAllProductsQueryHandler +
:, -
IRequestHandler. =
<= >
GetAllProductsQuery> Q
,Q R
IEnumerableS ^
<^ _

ProductDto_ i
>i j
>j k
{ 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
private 
readonly 
IMapper  
_mapper! (
;( )
public &
GetAllProductsQueryHandler )
() *
IUnitOfWork* 5

unitOfWork6 @
,@ A
IMapperB I
mapperJ P
)P Q
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
_mapper 
= 
mapper 
; 
} 	
public 
async 
Task 
< 
IEnumerable %
<% &

ProductDto& 0
>0 1
>1 2
Handle3 9
(9 :
GetAllProductsQuery: M
requestN U
,U V
CancellationTokenW h
cancellationTokeni z
)z {
{ 	
var 
spec 
= 
new -
!ProductsWithCategorySpecification <
(< =
)= >
;> ?
var 
products 
= 
await  
_unitOfWork! ,
., -
GetRepository- :
<: ;
Product; B
>B C
(C D
)D E
.E F
	ListAsyncF O
(O P
specP T
,T U
cancellationTokenV g
)g h
;h i
var!! 
productDtos!! 
=!! 
_mapper!! %
.!!% &
Map!!& )
<!!) *
IEnumerable!!* 5
<!!5 6

ProductDto!!6 @
>!!@ A
>!!A B
(!!B C
products!!C K
)!!K L
;!!L M
return## 
productDtos## 
;## 
})) 	
}** 
public-- 

class-- -
!ProductsWithCategorySpecification-- 2
:--3 4
BaseSpecification--5 F
<--F G
Product--G N
>--N O
{.. 
public// -
!ProductsWithCategorySpecification// 0
(//0 1
)//1 2
{00 	

AddInclude11 
(11 
p11 
=>11 
p11 
.11 
Category11 &
)11& '
;11' (
ApplyOrderBy22 
(22 
p22 
=>22 
p22 
.22  
Name22  $
)22$ %
;22% &
}33 	
}44 
}55 ˚
~C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Products\Queries\GetAllProducts\GetAllProductsQuery.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Products% -
.- .
Queries. 5
.5 6
GetAllProducts6 D
{ 
public 

class 
GetAllProductsQuery $
:% &
IRequest' /
</ 0
IEnumerable0 ;
<; <

ProductDto< F
>F G
>G H
{		 
}

 
} ⁄
iC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Products\DTOs\UpdateProductDto.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Products% -
.- .
DTOs. 2
{ 
public 

class 
UpdateProductDto !
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
[		 	
Required			 
(		 
ErrorMessage		 
=		  
$str		! 7
)		7 8
]		8 9
[

 	
StringLength

	 
(

 
$num

 
,

 
ErrorMessage

 '
=

( )
$str

* T
)

T U
]

U V
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage '
=( )
$str* T
)T U
]U V
public 
string 
? 
Description "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	
Range	 
( 
$num 
, 
int 
. 
MaxValue 
, 
ErrorMessage  ,
=- .
$str/ N
)N O
]O P
public 
int 
StockQuantity  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
Range	 
( 
$num 
, 
int 
. 
MaxValue 
, 
ErrorMessage  ,
=- .
$str/ W
)W X
]X Y
public 
int 

CategoryId 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} Ï
cC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Products\DTOs\ProductDto.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Products% -
.- .
DTOs. 2
{ 
public 

class 

ProductDto 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
? 
Description "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
StockQuantity  
{! "
get# &
;& '
set( +
;+ ,
}- .
public		 
int		 

CategoryId		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
public

 
string

 
?

 
CategoryName

 #
{

$ %
get

& )
;

) *
set

+ .
;

. /
}

0 1
public 
DateTime 
	CreatedAt !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
DateTime 
? 
	UpdatedAt "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 
	CreatedBy  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
	UpdatedBy  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
bool 
	IsDeleted 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} ‘
iC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Products\DTOs\CreateProductDto.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Products% -
.- .
DTOs. 2
{ 
public 

class 
CreateProductDto !
{ 
[ 	
Required	 
( 
ErrorMessage 
=  
$str! 7
)7 8
]8 9
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage '
=( )
$str* T
)T U
]U V
public		 
string		 
Name		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
=		) *
string		+ 1
.		1 2
Empty		2 7
;		7 8
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage '
=( )
$str* T
)T U
]U V
public 
string 
? 
Description "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	
Required	 
( 
ErrorMessage 
=  
$str! =
)= >
]> ?
[ 	
Range	 
( 
$num 
, 
int 
. 
MaxValue 
, 
ErrorMessage  ,
=- .
$str/ W
)W X
]X Y
public 
int 

CategoryId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Range	 
( 
$num 
, 
int 
. 
MaxValue 
, 
ErrorMessage  ,
=- .
$str/ N
)N O
]O P
public 
int 
StockQuantity  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
} Ÿ(
ÜC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Products\Commands\UpdateProduct\UpdateProductCommandHandler.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Products% -
.- .
Commands. 6
.6 7
UpdateProduct7 D
{ 
public 

class '
UpdateProductCommandHandler ,
:- .
IRequestHandler/ >
<> ? 
UpdateProductCommand? S
>S T
{ 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
public '
UpdateProductCommandHandler *
(* +
IUnitOfWork+ 6

unitOfWork7 A
)A B
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
} 	
public 
async 
Task 
Handle  
(  ! 
UpdateProductCommand! 5
request6 =
,= >
CancellationToken? P
cancellationTokenQ b
)b c
{ 	
var 
productRepo 
= 
_unitOfWork )
.) *
GetRepository* 7
<7 8
Product8 ?
>? @
(@ A
)A B
;B C
var 
product 
= 
await 
productRepo  +
.+ ,
GetByIdAsync, 8
(8 9
request9 @
.@ A
IdA C
)C D
;D E
if 
( 
product 
== 
null 
)  
{ 
throw 
new 
DomainException )
() *
$"* ,
$str, G
{G H
requestH O
.O P
IdP R
}R S
"S T
)T U
;U V
} 
if   
(   
request   
.   

CategoryId   "
!=  # %
product  & -
.  - .

CategoryId  . 8
)  8 9
{!! 
var"" 
categoryExists"" "
=""# $
await""% *
_unitOfWork""+ 6
.""6 7
GetRepository""7 D
<""D E
Category""E M
>""M N
(""N O
)""O P
.""P Q
ExistsAsync""Q \
(""\ ]
c""] ^
=>""_ a
c""b c
.""c d
Id""d f
==""g i
request""j q
.""q r

CategoryId""r |
)""| }
;""} ~
if## 
(## 
!## 
categoryExists## #
)### $
{$$ 
throw%% 
new%% 
DomainException%% -
(%%- .
$"%%. 0
$str%%0 L
{%%L M
request%%M T
.%%T U

CategoryId%%U _
}%%_ `
"%%` a
)%%a b
;%%b c
}&& 
product'' 
.'' 
ChangeCategory'' &
(''& '
request''' .
.''. /

CategoryId''/ 9
)''9 :
;'': ;
}(( 
var** 
newName** 
=** 
ProductName** %
.**% &
From**& *
(*** +
request**+ 2
.**2 3
Name**3 7
)**7 8
;**8 9
var++ 
newDescription++ 
=++  
ProductDescription++! 3
.++3 4
From++4 8
(++8 9
request++9 @
.++@ A
Description++A L
)++L M
;++M N
if-- 
(-- 
request-- 
.-- 
StockQuantity-- %
!=--& (
product--) 0
.--0 1

StockLevel--1 ;
.--; <
Value--< A
)--A B
{.. 
int// 

difference// 
=//  
request//! (
.//( )
StockQuantity//) 6
-//7 8
product//9 @
.//@ A

StockLevel//A K
.//K L
Value//L Q
;//Q R
if00 
(00 

difference00 
>00  
$num00! "
)00" #
{11 
product22 
.22 
IncreaseStock22 )
(22) *

difference22* 4
)224 5
;225 6
}33 
else44 
if44 
(44 

difference44 #
<44$ %
$num44& '
)44' (
{55 
product66 
.66 
DecreaseStock66 )
(66) *
-66* +

difference66+ 5
)665 6
;666 7
}77 
}88 
product:: 
.:: 

UpdateName:: 
(:: 
newName:: &
)::& '
;::' (
product;; 
.;; 
UpdateDescription;; %
(;;% &
newDescription;;& 4
);;4 5
;;;5 6
await== 
_unitOfWork== 
.== 
SaveChangesAsync== .
(==. /
cancellationToken==/ @
)==@ A
;==A B
}>> 	
}?? 
}@@ ª
C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Products\Commands\UpdateProduct\UpdateProductCommand.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Products% -
.- .
Commands. 6
.6 7
UpdateProduct7 D
{ 
public 

class  
UpdateProductCommand %
:& '
IRequest( 0
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public		 
string		 
Description		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
=		0 1
string		2 8
.		8 9
Empty		9 >
;		> ?
public

 
int

 
StockQuantity

  
{

! "
get

# &
;

& '
set

( +
;

+ ,
}

- .
public 
int 

CategoryId 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} ﬁ
ÜC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Products\Commands\DeleteProduct\DeleteProductCommandHandler.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Products% -
.- .
Commands. 6
.6 7
DeleteProduct7 D
{		 
public

 

class

 '
DeleteProductCommandHandler

 ,
:

- .
IRequestHandler

/ >
<

> ? 
DeleteProductCommand

? S
,

S T
Unit

U Y
>

Y Z
{ 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
public '
DeleteProductCommandHandler *
(* +
IUnitOfWork+ 6

unitOfWork7 A
)A B
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
} 	
public 
async 
Task 
< 
Unit 
> 
Handle  &
(& ' 
DeleteProductCommand' ;
request< C
,C D
CancellationTokenE V
cancellationTokenW h
)h i
{ 	
var 
productRepo 
= 
_unitOfWork )
.) *
GetRepository* 7
<7 8
Product8 ?
>? @
(@ A
)A B
;B C
var 
product 
= 
await 
productRepo  +
.+ ,
GetByIdAsync, 8
(8 9
request9 @
.@ A
IdA C
)C D
;D E
if 
( 
product 
== 
null 
)  
{ 
throw 
new 
DomainException )
() *
$"* ,
$str, G
{G H
requestH O
.O P
IdP R
}R S
"S T
)T U
;U V
}   
productRepo"" 
."" 
Delete"" 
("" 
product"" &
)""& '
;""' (
await## 
_unitOfWork## 
.## 
SaveChangesAsync## .
(##. /
cancellationToken##/ @
)##@ A
;##A B
return%% 
Unit%% 
.%% 
Value%% 
;%% 
}&& 	
}'' 
}(( §
C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Products\Commands\DeleteProduct\DeleteProductCommand.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Products% -
.- .
Commands. 6
.6 7
DeleteProduct7 D
{ 
public 

class  
DeleteProductCommand %
:& '
IRequest( 0
<0 1
Unit1 5
>5 6
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public

  
DeleteProductCommand

 #
(

# $
int

$ '
id

( *
)

* +
{ 	
Id 
= 
id 
; 
} 	
} 
} á!
ÜC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Products\Commands\CreateProduct\CreateProductCommandHandler.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Products% -
.- .
Commands. 6
.6 7
CreateProduct7 D
{ 
public 

class '
CreateProductCommandHandler ,
:- .
IRequestHandler/ >
<> ? 
CreateProductCommand? S
,S T

ProductDtoU _
>_ `
{ 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
private 
readonly 
IMapper  
_mapper! (
;( )
public '
CreateProductCommandHandler *
(* +
IUnitOfWork+ 6

unitOfWork7 A
,A B
IMapperC J
mapperK Q
)Q R
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
_mapper 
= 
mapper 
; 
} 	
public 
async 
Task 
< 

ProductDto $
>$ %
Handle& ,
(, - 
CreateProductCommand- A
requestB I
,I J
CancellationTokenK \
cancellationToken] n
)n o
{ 	
var 
category 
= 
await  
_unitOfWork! ,
., -

Categories- 7
.7 8
GetByIdAsync8 D
(D E
requestE L
.L M

CategoryIdM W
)W X
;X Y
if 
( 
category 
== 
null  
)  !
{ 
throw 
new 
DomainException )
() *
$"* ,
$str, H
{H I
requestI P
.P Q

CategoryIdQ [
}[ \
"\ ]
)] ^
;^ _
}   
var## 
productName## 
=## 
ProductName## )
.##) *
From##* .
(##. /
request##/ 6
.##6 7
Name##7 ;
)##; <
;##< =
var$$ 
productDescription$$ "
=$$# $
request$$% ,
.$$, -
Description$$- 8
!=$$9 ;
null$$< @
?$$A B
ProductDescription$$C U
.$$U V
From$$V Z
($$Z [
request$$[ b
.$$b c
Description$$c n
)$$n o
:$$p q
null$$r v
;$$v w
var%% 

stockLevel%% 
=%% 

StockLevel%% '
.%%' (
From%%( ,
(%%, -
request%%- 4
.%%4 5
StockQuantity%%5 B
)%%B C
;%%C D
var(( 
product(( 
=(( 
Product(( !
.((! "
Create((" (
(((( )
productName)) 
,)) 
productDescription** "
,**" #

stockLevel++ 
,++ 
request,, 
.,, 

CategoryId,, "
)-- 
;-- 
var00 
createdProduct00 
=00  
await00! &
_unitOfWork00' 2
.002 3
Products003 ;
.00; <
AddAsync00< D
(00D E
product00E L
)00L M
;00M N
await11 
_unitOfWork11 
.11 
SaveChangesAsync11 .
(11. /
cancellationToken11/ @
)11@ A
;11A B
var44 

productDto44 
=44 
_mapper44 $
.44$ %
Map44% (
<44( )

ProductDto44) 3
>443 4
(444 5
createdProduct445 C
)44C D
;44D E

productDto55 
.55 
CategoryName55 #
=55$ %
category55& .
.55. /
Name55/ 3
;553 4
return77 

productDto77 
;77 
}88 	
}99 
}:: ˜
C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Products\Commands\CreateProduct\CreateProductCommand.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Products% -
.- .
Commands. 6
.6 7
CreateProduct7 D
{ 
public 

class  
CreateProductCommand %
:& '
IRequest( 0
<0 1

ProductDto1 ;
>; <
{ 
[		 	
Required			 
(		 
ErrorMessage		 
=		  
$str		! 7
)		7 8
]		8 9
[

 	
StringLength

	 
(

 
$num

 
,

 
ErrorMessage

 '
=

( )
$str

* T
)

T U
]

U V
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage '
=( )
$str* T
)T U
]U V
public 
string 
? 
Description "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	
Range	 
( 
$num 
, 
int 
. 
MaxValue 
, 
ErrorMessage  ,
=- .
$str/ N
)N O
]O P
public 
int 
StockQuantity  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
Required	 
( 
ErrorMessage 
=  
$str! =
)= >
]> ?
[ 	
Range	 
( 
$num 
, 
int 
. 
MaxValue 
, 
ErrorMessage  ,
=- .
$str/ W
)W X
]X Y
public 
int 

CategoryId 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} Ü
éC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Permissions\Queries\GetAllPermissions\GetAllPermissionsQueryHandler.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Permissions% 0
.0 1
Queries1 8
.8 9
GetAllPermissions9 J
;J K
public 
class )
GetAllPermissionsQueryHandler *
:+ ,
IRequestHandler- <
<< ="
GetAllPermissionsQuery= S
,S T
IEnumerableU `
<` a
PermissionDtoa n
>n o
>o p
{ 
private 
readonly 
IUnitOfWork  
_unitOfWork! ,
;, -
private 
readonly 
IMapper 
_mapper $
;$ %
public 
)
GetAllPermissionsQueryHandler (
(( )
IUnitOfWork) 4

unitOfWork5 ?
,? @
IMapperA H
mapperI O
)O P
{ 
_unitOfWork 
= 

unitOfWork  
;  !
_mapper 
= 
mapper 
; 
} 
public!! 

async!! 
Task!! 
<!! 
IEnumerable!! !
<!!! "
PermissionDto!!" /
>!!/ 0
>!!0 1
Handle!!2 8
(!!8 9"
GetAllPermissionsQuery!!9 O
request!!P W
,!!W X
CancellationToken!!Y j
cancellationToken!!k |
)!!| }
{"" 
var$$ 
spec$$ 
=$$ 
new$$ '
AllPermissionsSpecification$$ 2
($$2 3
)$$3 4
;$$4 5
var%% 
permissions%% 
=%% 
await%% 
_unitOfWork%%  +
.%%+ ,
GetRepository%%, 9
<%%9 :

Permission%%: D
>%%D E
(%%E F
)%%F G
.%%G H
	ListAsync%%H Q
(%%Q R
spec%%R V
,%%V W
cancellationToken%%X i
)%%i j
;%%j k
var'' 
permissionDtos'' 
='' 
_mapper'' $
.''$ %
Map''% (
<''( )
IEnumerable'') 4
<''4 5
PermissionDto''5 B
>''B C
>''C D
(''D E
permissions''E P
)''P Q
;''Q R
return(( 
permissionDtos(( 
;(( 
})) 
}** Ä
áC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Permissions\Queries\GetAllPermissions\GetAllPermissionsQuery.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Permissions% 0
.0 1
Queries1 8
.8 9
GetAllPermissions9 J
;J K
public

 
class

 "
GetAllPermissionsQuery

 #
:

$ %
IRequest

& .
<

. /
IEnumerable

/ :
<

: ;
PermissionDto

; H
>

H I
>

I J
{ 
} øA
[C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Features\Auth\AuthService.cs
	namespace 	
Stock
 
. 
Application 
. 
Features $
.$ %
Auth% )
;) *
public 
class 
AuthService 
{ 
private 
readonly 
IUnitOfWork  
_unitOfWork! ,
;, -
private 
readonly 
ILogger 
< 
AuthService (
>( )
_logger* 1
;1 2
private 
readonly 
IPasswordHasher $
_passwordHasher% 4
;4 5
private 
readonly 
IJwtTokenGenerator '
_jwtTokenGenerator( :
;: ;
public 

AuthService 
( 
IUnitOfWork "

unitOfWork# -
,- .
ILogger/ 6
<6 7
AuthService7 B
>B C
loggerD J
,J K
IPasswordHasherL [
passwordHasher\ j
,j k
IJwtTokenGeneratorl ~
jwtTokenGenerator	 ê
)
ê ë
{ 
_unitOfWork 
= 

unitOfWork  
;  !
_logger 
= 
logger 
; 
_passwordHasher 
= 
passwordHasher (
;( )
_jwtTokenGenerator 
= 
jwtTokenGenerator .
;. /
} 
public 

async 
Task 
< 
Result 
< 
AuthResponseDto ,
>, -
>- .
Register/ 7
(7 8
RegisterDto8 C
registerDtoD O
)O P
{ 
var   
existingUser   
=   
await    
_unitOfWork  ! ,
.  , -
Users  - 2
.  2 3
GetBySicilAsync  3 B
(  B C
registerDto  C N
.  N O
Sicil  O T
)  T U
;  U V
if!! 

(!! 
existingUser!! 
!=!! 
null!!  
)!!  !
{"" 	
_logger## 
.## 

LogWarning## 
(## 
$str## R
,##R S
registerDto##T _
.##_ `
Sicil##` e
)##e f
;##f g
return$$ 
Result$$ 
<$$ 
AuthResponseDto$$ )
>$$) *
.$$* +
Failure$$+ 2
($$2 3
ErrorMessages$$3 @
.$$@ A
SicilAlreadyExists$$A S
)$$S T
;$$T U
}%% 	
_logger'' 
.'' 
LogInformation'' 
('' 
$str'' F
,''F G
registerDto''H S
.''S T
Sicil''T Y
)''Y Z
;''Z [
var)) 
passwordHash)) 
=)) 
_passwordHasher)) *
.))* +
HashPassword))+ 7
())7 8
registerDto))8 C
.))C D
Password))D L
)))L M
;))M N
bool++ 
isAdmin++ 
=++ 
false++ 
;++ 
if,, 

(,, 
registerDto,, 
.,, 
RoleId,, 
.,, 
HasValue,, '
),,' (
{-- 	
var.. 
role.. 
=.. 
await.. 
_unitOfWork.. (
...( )
Roles..) .
.... /
GetByIdAsync../ ;
(..; <
registerDto..< G
...G H
RoleId..H N
...N O
Value..O T
)..T U
;..U V
if// 
(// 
role// 
!=// 
null// 
&&// 
role//  $
.//$ %
Name//% )
==//* ,
$str//- 4
)//4 5
{00 
isAdmin11 
=11 
true11 
;11 
}22 
else33 
if33 
(33 
role33 
==33 
null33 !
)33! "
{44 
_logger55 
.55 

LogWarning55 "
(55" #
$str	55# ë
,
55ë í
registerDto
55ì û
.
55û ü
RoleId
55ü •
.
55• ¶
Value
55¶ ´
,
55´ ¨
registerDto
55≠ ∏
.
55∏ π
Sicil
55π æ
)
55æ ø
;
55ø ¿
}66 
}77 	
var99 
user99 
=99 
new99 
User99 
{:: 	
Adi;; 
=;; 
registerDto;; 
.;; 
Adi;; !
,;;! "
Soyadi<< 
=<< 
registerDto<<  
.<<  !
Soyadi<<! '
,<<' (
PasswordHash== 
=== 
passwordHash== '
,==' (
Sicil>> 
=>> 
registerDto>> 
.>>  
Sicil>>  %
,>>% &
IsAdmin?? 
=?? 
isAdmin?? 
,?? 
RoleId@@ 
=@@ 
registerDto@@  
.@@  !
RoleId@@! '
}AA 	
;AA	 

awaitCC 
_unitOfWorkCC 
.CC 
UsersCC 
.CC  
AddAsyncCC  (
(CC( )
userCC) -
)CC- .
;CC. /
awaitDD 
_unitOfWorkDD 
.DD 
SaveChangesAsyncDD *
(DD* +
)DD+ ,
;DD, -
_loggerFF 
.FF 
LogInformationFF 
(FF 
$strFF Y
,FFY Z
userFF[ _
.FF_ `
SicilFF` e
,FFe f
userFFg k
.FFk l
IdFFl n
)FFn o
;FFo p
varHH &
registeredUserWithRoleSpecHH &
=HH' (
newHH) ,'
UsersWithRolesSpecificationHH- H
(HHH I
userHHI M
.HHM N
IdHHN P
)HHP Q
;HHQ R
varII "
registeredUserWithRoleII "
=II# $
awaitII% *
_unitOfWorkII+ 6
.II6 7
UsersII7 <
.II< =
FirstOrDefaultAsyncII= P
(IIP Q&
registeredUserWithRoleSpecIIQ k
)IIk l
;IIl m
ifKK 

(KK "
registeredUserWithRoleKK "
==KK# %
nullKK& *
)KK* +
{LL 	
_loggerMM 
.MM 
LogErrorMM 
(MM 
$strMM ^
,MM^ _
userMM` d
.MMd e
IdMMe g
)MMg h
;MMh i
returnNN 
ResultNN 
<NN 
AuthResponseDtoNN )
>NN) *
.NN* +
FailureNN+ 2
(NN2 3
$strNN3 Z
)NNZ [
;NN[ \
}OO 	
varQQ 
tokenQQ 
=QQ 
_jwtTokenGeneratorQQ &
.QQ& '
GenerateTokenQQ' 4
(QQ4 5"
registeredUserWithRoleQQ5 K
)QQK L
;QQL M
returnSS 
ResultSS 
<SS 
AuthResponseDtoSS %
>SS% &
.SS& '
SuccessSS' .
(SS. /
newSS/ 2
AuthResponseDtoSS3 B
{TT 	
TokenUU 
=UU 
tokenUU 
,UU 
UserIdVV 
=VV "
registeredUserWithRoleVV +
.VV+ ,
IdVV, .
.VV. /
ToStringVV/ 7
(VV7 8
)VV8 9
,VV9 :
SicilWW 
=WW "
registeredUserWithRoleWW *
.WW* +
SicilWW+ 0
,WW0 1
AdiXX 
=XX "
registeredUserWithRoleXX (
.XX( )
AdiXX) ,
,XX, -
SoyadiYY 
=YY "
registeredUserWithRoleYY +
.YY+ ,
SoyadiYY, 2
,YY2 3
IsAdminZZ 
=ZZ "
registeredUserWithRoleZZ ,
.ZZ, -
IsAdminZZ- 4
,ZZ4 5
Success[[ 
=[[ 
true[[ 
,[[ 
RoleId\\ 
=\\ "
registeredUserWithRole\\ +
.\\+ ,
RoleId\\, 2
,\\2 3
RoleName]] 
=]] "
registeredUserWithRole]] -
.]]- .
Role]]. 2
?]]2 3
.]]3 4
Name]]4 8
}^^ 	
)^^	 

;^^
 
}__ 
}`` Í
UC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\DependencyInjection.cs
	namespace 	
Stock
 
. 
Application 
{ 
public 

static 
class 
DependencyInjection +
{		 
public

 
static

 
IServiceCollection

 (
AddApplication

) 7
(

7 8
this

8 <
IServiceCollection

= O
services

P X
)

X Y
{ 	
services 
. 
AddAutoMapper "
(" #
Assembly# +
.+ , 
GetExecutingAssembly, @
(@ A
)A B
)B C
;C D
services 
. 

AddMediatR 
(  
cfg  #
=>$ &
cfg' *
.* +(
RegisterServicesFromAssembly+ G
(G H
AssemblyH P
.P Q 
GetExecutingAssemblyQ e
(e f
)f g
)g h
)h i
;i j
var 
assembly 
= 
Assembly #
.# $ 
GetExecutingAssembly$ 8
(8 9
)9 :
;: ;
var 
validatorType 
= 
typeof  &
(& '

IValidator' 1
<1 2
>2 3
)3 4
;4 5
var 
validatorTypes 
=  
assembly! )
.) *
GetTypes* 2
(2 3
)3 4
. 
Where 
( 
t 
=> 
t 
. 
GetInterfaces +
(+ ,
), -
.- .
Any. 1
(1 2
i2 3
=>4 6
i7 8
.8 9
IsGenericType9 F
&&G I
iJ K
.K L$
GetGenericTypeDefinitionL d
(d e
)e f
==g i
validatorTypej w
)w x
)x y
. 
ToList 
( 
) 
; 
foreach 
( 
var 
	validator "
in# %
validatorTypes& 4
)4 5
{ 
var 
validatorInterface &
=' (
	validator) 2
.2 3
GetInterfaces3 @
(@ A
)A B
. 
First 
( 
i 
=> 
i  !
.! "
IsGenericType" /
&&0 2
i3 4
.4 5$
GetGenericTypeDefinition5 M
(M N
)N O
==P R
validatorTypeS `
)` a
;a b
services 
. 
AddTransient %
(% &
validatorInterface& 8
,8 9
	validator: C
)C D
;D E
} 
return   
services   
;   
}!! 	
}"" 
}## ›

UC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Constants\RoleNames.cs
	namespace 	
Stock
 
. 
Application 
. 
	Constants %
{ 
public 

static 
class 
	RoleNames !
{ 
public 
const 
string 
Admin !
=" #
$str$ +
;+ ,
public 
const 
string 
User  
=! "
$str# )
;) *
public 
const 
string 
Manager #
=$ %
$str& /
;/ 0
public 
const 
string 

Supervisor &
=' (
$str) 5
;5 6
public   
const   
string   
ReadOnly   $
=  % &
$str  ' 1
;  1 2
public%% 
const%% 
string%% 
	RevirUser%% %
=%%& '
$str%%( 3
;%%3 4
public** 
const** 
string** 
BilgiIslemUser** *
=**+ ,
$str**- =
;**= >
public// 
const// 
string// 
Basic// !
=//" #
$str//$ +
;//+ ,
}00 
}11 À4
[C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Constants\PermissionNames.cs
	namespace 	
Stock
 
. 
Application 
. 
	Constants %
{ 
public 

static 
class 
PermissionNames '
{ 
public   
const   
string   
Admin   !
=  " #
$str  $ +
;  + ,
public(( 
const(( 
string(( 
PagesITAccess(( )
=((* +
$str((, =
;((= >
public00 
const00 
string00 
PagesRevirView00 *
=00+ ,
$str00- ?
;00? @
public88 
const88 
string88 
PagesBilgiIslemView88 /
=880 1
$str882 I
;88I J
public@@ 
const@@ 
string@@ 
PagesDashboardView@@ .
=@@/ 0
$str@@1 G
;@@G H
publicHH 
constHH 
stringHH 
PagesAdminViewHH *
=HH+ ,
$strHH- ?
;HH? @
publicMM 
constMM 
stringMM 
ViewDashboardMM )
=MM* +
$strMM, O
;MMO P
publicYY 
constYY 
stringYY 
	UsersViewYY %
=YY& '
$strYY( @
;YY@ A
publicaa 
constaa 
stringaa 
UsersCreateaa '
=aa( )
$straa* D
;aaD E
publicii 
constii 
stringii 
	UsersEditii %
=ii& '
$strii( @
;ii@ A
publicqq 
constqq 
stringqq 
UsersDeleteqq '
=qq( )
$strqq* D
;qqD E
public}} 
const}} 
string}} 
	RolesView}} %
=}}& '
$str}}( @
;}}@ A
public
ÖÖ 
const
ÖÖ 
string
ÖÖ 
RolesCreate
ÖÖ '
=
ÖÖ( )
$str
ÖÖ* D
;
ÖÖD E
public
çç 
const
çç 
string
çç 
	RolesEdit
çç %
=
çç& '
$str
çç( @
;
çç@ A
public
ïï 
const
ïï 
string
ïï 
RolesDelete
ïï '
=
ïï( )
$str
ïï* D
;
ïïD E
public
öö 
const
öö 
string
öö $
RolesAssignPermissions
öö 2
=
öö3 4
$str
öö5 Z
;
ööZ [
public
¶¶ 
const
¶¶ 
string
¶¶ 
PermissionsView
¶¶ +
=
¶¶, -
$str
¶¶. L
;
¶¶L M
public
ÆÆ 
const
ÆÆ 
string
ÆÆ 
PermissionsCreate
ÆÆ -
=
ÆÆ. /
$str
ÆÆ0 P
;
ÆÆP Q
public
∂∂ 
const
∂∂ 
string
∂∂ 
PermissionsUpdate
∂∂ -
=
∂∂. /
$str
∂∂0 P
;
∂∂P Q
public
ææ 
const
ææ 
string
ææ 
PermissionsDelete
ææ -
=
ææ. /
$str
ææ0 P
;
ææP Q
public
∆∆ 
const
∆∆ 
string
∆∆ 
PermissionsCheck
∆∆ ,
=
∆∆- .
$str
∆∆/ N
;
∆∆N O
public
““ 
const
““ 
string
““ $
UsersPermissionsAssign
““ 2
=
““3 4
$str
““5 Z
;
““Z [
public
⁄⁄ 
const
⁄⁄ 
string
⁄⁄ $
UsersPermissionsRemove
⁄⁄ 2
=
⁄⁄3 4
$str
⁄⁄5 Z
;
⁄⁄Z [
public
‚‚ 
const
‚‚ 
string
‚‚ #
UsersPermissionsReset
‚‚ 1
=
‚‚2 3
$str
‚‚4 X
;
‚‚X Y
public
ÓÓ 
const
ÓÓ 
string
ÓÓ 
ProductsView
ÓÓ (
=
ÓÓ) *
$str
ÓÓ+ F
;
ÓÓF G
public
ˆˆ 
const
ˆˆ 
string
ˆˆ 
ProductsCreate
ˆˆ *
=
ˆˆ+ ,
$str
ˆˆ- J
;
ˆˆJ K
public
˛˛ 
const
˛˛ 
string
˛˛ 
ProductsUpdate
˛˛ *
=
˛˛+ ,
$str
˛˛- J
;
˛˛J K
public
ÜÜ 
const
ÜÜ 
string
ÜÜ 
ProductsDelete
ÜÜ *
=
ÜÜ+ ,
$str
ÜÜ- J
;
ÜÜJ K
public
íí 
const
íí 
string
íí 
CategoriesView
íí *
=
íí+ ,
$str
íí- J
;
ííJ K
public
öö 
const
öö 
string
öö 
CategoriesCreate
öö ,
=
öö- .
$str
öö/ N
;
ööN O
public
¢¢ 
const
¢¢ 
string
¢¢ 
CategoriesUpdate
¢¢ ,
=
¢¢- .
$str
¢¢/ N
;
¢¢N O
public
™™ 
const
™™ 
string
™™ 
CategoriesDelete
™™ ,
=
™™- .
$str
™™/ N
;
™™N O
public
∂∂ 
const
∂∂ 
string
∂∂ 
AuditLogsView
∂∂ )
=
∂∂* +
$str
∂∂, H
;
∂∂H I
public
ææ 
static
ææ 
List
ææ 
<
ææ 
string
ææ !
>
ææ! "
GetAllPermissions
ææ# 4
(
ææ4 5
)
ææ5 6
{
øø 	
return
¿¿ 
typeof
¿¿ 
(
¿¿ 
PermissionNames
¿¿ )
)
¿¿) *
.
¿¿* +
	GetFields
¿¿+ 4
(
¿¿4 5
BindingFlags
¿¿5 A
.
¿¿A B
Public
¿¿B H
|
¿¿I J
BindingFlags
¿¿K W
.
¿¿W X
Static
¿¿X ^
|
¿¿_ `
BindingFlags
¿¿a m
.
¿¿m n
FlattenHierarchy
¿¿n ~
)
¿¿~ 
.
¡¡ 
Where
¡¡ 
(
¡¡ 
fi
¡¡ 
=>
¡¡ 
fi
¡¡ 
.
¡¡  
	IsLiteral
¡¡  )
&&
¡¡* ,
!
¡¡- .
fi
¡¡. 0
.
¡¡0 1

IsInitOnly
¡¡1 ;
&&
¡¡< >
fi
¡¡? A
.
¡¡A B
	FieldType
¡¡B K
==
¡¡L N
typeof
¡¡O U
(
¡¡U V
string
¡¡V \
)
¡¡\ ]
)
¡¡] ^
.
¬¬ 
Select
¬¬ 
(
¬¬ 
fi
¬¬ 
=>
¬¬ 
fi
¬¬  
.
¬¬  !!
GetRawConstantValue
¬¬! 4
(
¬¬4 5
)
¬¬5 6
as
¬¬7 9
string
¬¬: @
)
¬¬@ A
.
√√ 
Where
√√ 
(
√√ 
s
√√ 
=>
√√ 
s
√√ 
!=
√√  
null
√√! %
)
√√% &
.
ƒƒ 
ToList
ƒƒ 
(
ƒƒ 
)
ƒƒ 
!
ƒƒ 
;
ƒƒ 
}
≈≈ 	
}
∆∆ 
}««  
WC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Constants\LogMessages.cs
	namespace 	
Stock
 
. 
Application 
. 
	Constants %
{ 
public 

static 
class 
LogMessages #
{ 
public 
const 
string 
ApplicationStarting /
=0 1
$str2 L
;L M
public 
const 
string 
ApplicationStarted .
=/ 0
$str1 F
;F G
public$$ 
const$$ 
string$$ 
ApplicationStopping$$ /
=$$0 1
$str$$2 L
;$$L M
public)) 
const)) 
string)) 
ApplicationStopped)) .
=))/ 0
$str))1 F
;))F G
public11 
const11 
string11 
OperationStarted11 ,
=11- .
$str11/ F
;11F G
public99 
const99 
string99 
OperationCompleted99 .
=99/ 0
$str991 H
;99H I
publicAA 
constAA 
stringAA 
OperationFailedAA +
=AA, -
$strAA. I
;AAI J
publicMM 
constMM 
stringMM 
UserLoginAttemptMM ,
=MM- .
$strMM/ N
;MMN O
publicUU 
constUU 
stringUU 
UserLoginSuccessUU ,
=UU- .
$strUU/ U
;UUU V
public]] 
const]] 
string]] 
UserLoginFailed]] +
=]], -
$str]]. O
;]]O P
publicee 
constee 
stringee 

UserLogoutee &
=ee' (
$stree) E
;eeE F
publicmm 
constmm 
stringmm 
UserCreatingmm (
=mm) *
$strmm+ d
;mmd e
publicuu 
constuu 
stringuu 
UserCreateduu '
=uu( )
$struu* Y
;uuY Z
public}} 
const}} 
string}} 
UserUpdating}} (
=}}) *
$str}}+ X
;}}X Y
public
ÖÖ 
const
ÖÖ 
string
ÖÖ 
UserUpdated
ÖÖ '
=
ÖÖ( )
$str
ÖÖ* O
;
ÖÖO P
public
çç 
const
çç 
string
çç 
UserDeleting
çç (
=
çç) *
$str
çç+ P
;
ççP Q
public
ïï 
const
ïï 
string
ïï 
UserDeleted
ïï '
=
ïï( )
$str
ïï* K
;
ïïK L
public
öö 
const
öö 
string
öö 
PasswordChanging
öö ,
=
öö- .
$str
öö/ X
;
ööX Y
public
¢¢ 
const
¢¢ 
string
¢¢ 
PasswordChanged
¢¢ +
=
¢¢, -
$str
¢¢. `
;
¢¢` a
public
™™ 
const
™™ 
string
™™ "
PasswordChangeFailed
™™ 0
=
™™1 2
$str
™™3 n
;
™™n o
public
≤≤ 
const
≤≤ 
string
≤≤ !
UserCreationRequest
≤≤ /
=
≤≤0 1
$str
≤≤2 k
;
≤≤k l
public
∫∫ 
const
∫∫ 
string
∫∫ %
UserCreatedSuccessfully
∫∫ 3
=
∫∫4 5
$str
∫∫6 e
;
∫∫e f
public
¬¬ 
const
¬¬ 
string
¬¬ 
MissingParameter
¬¬ ,
=
¬¬- .
$str
¬¬/ I
;
¬¬I J
public
   
const
   
string
   
InvalidRoleId
   )
=
  * +
$str
  , B
;
  B C
public
““ 
const
““ 
string
““ /
!ValidationErrorDuringUserCreation
““ =
=
““> ?
$str
““@ |
;
““| }
public
⁄⁄ 
const
⁄⁄ 
string
⁄⁄ %
ErrorDuringUserCreation
⁄⁄ 3
=
⁄⁄4 5
$str
⁄⁄6 q
;
⁄⁄q r
public
‚‚ 
const
‚‚ 
string
‚‚ 

InnerError
‚‚ &
=
‚‚' (
$str
‚‚) 7
;
‚‚7 8
public
ÁÁ 
const
ÁÁ 
string
ÁÁ #
UserIdNotFoundInToken
ÁÁ 1
=
ÁÁ2 3
$str
ÁÁ4 g
;
ÁÁg h
public
ÔÔ 
const
ÔÔ 
string
ÔÔ *
PasswordChangeRequestForUser
ÔÔ 8
=
ÔÔ9 :
$str
ÔÔ; h
;
ÔÔh i
public
˜˜ 
const
˜˜ 
string
˜˜ &
PasswordChangeSuccessful
˜˜ 4
=
˜˜5 6
$str
˜˜7 i
;
˜˜i j
public
¸¸ 
const
¸¸ 
string
¸¸ 
GettingAllUsers
¸¸ +
=
¸¸, -
$str
¸¸. O
;
¸¸O P
public
ÑÑ 
const
ÑÑ 
string
ÑÑ 
UsersRetrieved
ÑÑ *
=
ÑÑ+ ,
$str
ÑÑ- N
;
ÑÑN O
public
ââ 
const
ââ 
string
ââ 
ErrorGettingUsers
ââ -
=
ââ. /
$str
ââ0 \
;
ââ\ ]
public
ëë 
const
ëë 
string
ëë 
GettingUserById
ëë +
=
ëë, -
$str
ëë. U
;
ëëU V
public
ôô 
const
ôô 
string
ôô 
UserRetrieved
ôô )
=
ôô* +
$str
ôô, O
;
ôôO P
public
°° 
const
°° 
string
°° 
UserNotFoundById
°° ,
=
°°- .
$str
°°/ S
;
°°S T
public
©© 
const
©© 
string
©© "
ErrorGettingUserById
©© 0
=
©©1 2
$str
©©3 i
;
©©i j
public
±± 
const
±± 
string
±± 
CreatingUser
±± (
=
±±) *
$str
±±+ N
;
±±N O
public
ππ 
const
ππ 
string
ππ 
DuplicateUsername
ππ -
=
ππ. /
$str
ππ0 Z
;
ππZ [
public
¡¡ 
const
¡¡ 
string
¡¡ 
DuplicateSicil
¡¡ *
=
¡¡+ ,
$str
¡¡- X
;
¡¡X Y
public
…… 
const
…… 
string
…… 
UpdatingUser
…… (
=
……) *
$str
……+ T
;
……T U
public
—— 
const
—— 
string
—— 
DeletingUser
—— (
=
——) *
$str
——+ P
;
——P Q
public
ŸŸ 
const
ŸŸ 
string
ŸŸ 
ErrorDeletingUser
ŸŸ -
=
ŸŸ. /
$str
ŸŸ0 d
;
ŸŸd e
public
·· 
const
·· 
string
·· #
CannotDeleteAdminUser
·· 1
=
··2 3
$str
··4 _
;
··_ `
public
ÈÈ 
const
ÈÈ 
string
ÈÈ 
CannotDeleteSelf
ÈÈ ,
=
ÈÈ- .
$str
ÈÈ/ Z
;
ÈÈZ [
public
ÒÒ 
const
ÒÒ 
string
ÒÒ 
UpdatingUserRole
ÒÒ ,
=
ÒÒ- .
$str
ÒÒ/ k
;
ÒÒk l
public
˘˘ 
const
˘˘ 
string
˘˘ 
UserRoleUpdated
˘˘ +
=
˘˘, -
$str
˘˘. f
;
˘˘f g
public
ÅÅ 
const
ÅÅ 
string
ÅÅ #
ErrorUpdatingUserRole
ÅÅ 1
=
ÅÅ2 3
$str
ÅÅ4 
;ÅÅ Ä
public
ââ 
const
ââ 
string
ââ 
RoleNotFoundById
ââ ,
=
ââ- .
$str
ââ/ M
;
ââM N
public
éé 
const
éé 
string
éé (
ConflictDuringUserCreation
éé 6
=
éé7 8
$str
éé9 v
;
éév w
public
ìì 
const
ìì 
string
ìì (
NotFoundDuringUserCreation
ìì 6
=
ìì7 8
$str
ìì9 u
;
ììu v
public
òò 
const
òò 
string
òò &
ConflictDuringUserUpdate
òò 4
=
òò5 6
$str
òò7 r
;
òòr s
public
ùù 
const
ùù 
string
ùù &
NotFoundDuringUserUpdate
ùù 4
=
ùù5 6
$strùù7 Ç
;ùùÇ É
public
¢¢ 
const
¢¢ 
string
¢¢ &
NotFoundDuringUserDelete
¢¢ 4
=
¢¢5 6
$str
¢¢7 f
;
¢¢f g
public
ßß 
const
ßß 
string
ßß #
ErrorDuringUserDelete
ßß 1
=
ßß2 3
$str
ßß4 \
;
ßß\ ]
public
≥≥ 
const
≥≥ 
string
≥≥ 
RoleCreating
≥≥ (
=
≥≥) *
$str
≥≥+ R
;
≥≥R S
public
ªª 
const
ªª 
string
ªª 
RoleCreated
ªª '
=
ªª( )
$str
ªª* S
;
ªªS T
public
√√ 
const
√√ 
string
√√ 
RoleUpdating
√√ (
=
√√) *
$str
√√+ R
;
√√R S
public
ÀÀ 
const
ÀÀ 
string
ÀÀ 
RoleUpdated
ÀÀ '
=
ÀÀ( )
$str
ÀÀ* N
;
ÀÀN O
public
”” 
const
”” 
string
”” 
RoleDeleting
”” (
=
””) *
$str
””+ M
;
””M N
public
€€ 
const
€€ 
string
€€ 
RoleDeleted
€€ '
=
€€( )
$str
€€* J
;
€€J K
public
‡‡ 
const
‡‡ 
string
‡‡ 
FetchingAllRoles
‡‡ ,
=
‡‡- .
$str
‡‡/ J
;
‡‡J K
public
ËË 
const
ËË 
string
ËË &
RolesFetchedSuccessfully
ËË 4
=
ËË5 6
$str
ËË7 U
;
ËËU V
public
ÌÌ 
const
ÌÌ 
string
ÌÌ  
ErrorFetchingRoles
ÌÌ .
=
ÌÌ/ 0
$str
ÌÌ1 W
;
ÌÌW X
public
ıı 
const
ıı 
string
ıı 
FetchingRoleById
ıı ,
=
ıı- .
$str
ıı/ P
;
ııP Q
public
˝˝ 
const
˝˝ 
string
˝˝ 
RoleNotFound
˝˝ (
=
˝˝) *
$str
˝˝+ C
;
˝˝C D
public
ÖÖ 
const
ÖÖ 
string
ÖÖ %
RoleFetchedSuccessfully
ÖÖ 3
=
ÖÖ4 5
$str
ÖÖ6 W
;
ÖÖW X
public
çç 
const
çç 
string
çç 
ErrorFetchingRole
çç -
=
çç. /
$str
çç0 V
;
ççV W
public
íí 
const
íí 
string
íí 
ErrorCreatingRole
íí -
=
íí. /
$str
íí0 U
;
ííU V
public
öö 
const
öö 
string
öö #
RoleNotFoundForUpdate
öö 1
=
öö2 3
$str
öö4 a
;
ööa b
public
¢¢ 
const
¢¢ 
string
¢¢ +
RoleNotFoundDuringConcurrency
¢¢ 9
=
¢¢: ;
$str
¢¢< 
;¢¢ Ä
public
™™ 
const
™™ 
string
™™ *
ConcurrencyErrorUpdatingRole
™™ 8
=
™™9 :
$str
™™; r
;
™™r s
public
≤≤ 
const
≤≤ 
string
≤≤ 
ErrorUpdatingRole
≤≤ -
=
≤≤. /
$str
≤≤0 X
;
≤≤X Y
public
∫∫ 
const
∫∫ 
string
∫∫ #
RoleNotFoundForDelete
∫∫ 1
=
∫∫2 3
$str
∫∫4 ]
;
∫∫] ^
public
¬¬ 
const
¬¬ 
string
¬¬ #
RoleInUseCannotDelete
¬¬ 1
=
¬¬2 3
$str
¬¬4 d
;
¬¬d e
public
   
const
   
string
   
ErrorDeletingRole
   -
=
  . /
$str
  0 T
;
  T U
public
÷÷ 
const
÷÷ 
string
÷÷  
PermissionCreating
÷÷ .
=
÷÷/ 0
$str
÷÷1 Y
;
÷÷Y Z
public
ﬁﬁ 
const
ﬁﬁ 
string
ﬁﬁ 
PermissionCreated
ﬁﬁ -
=
ﬁﬁ. /
$str
ﬁﬁ0 Z
;
ﬁﬁZ [
public
ÊÊ 
const
ÊÊ 
string
ÊÊ  
PermissionUpdating
ÊÊ .
=
ÊÊ/ 0
$str
ÊÊ1 Y
;
ÊÊY Z
public
ÓÓ 
const
ÓÓ 
string
ÓÓ 
PermissionUpdated
ÓÓ -
=
ÓÓ. /
$str
ÓÓ0 U
;
ÓÓU V
public
ˆˆ 
const
ˆˆ 
string
ˆˆ  
PermissionDeleting
ˆˆ .
=
ˆˆ/ 0
$str
ˆˆ1 T
;
ˆˆT U
public
˛˛ 
const
˛˛ 
string
˛˛ 
PermissionDeleted
˛˛ -
=
˛˛. /
$str
˛˛0 Q
;
˛˛Q R
public
ÜÜ 
const
ÜÜ 
string
ÜÜ %
UserPermissionAssigning
ÜÜ 3
=
ÜÜ4 5
$str
ÜÜ6 z
;
ÜÜz {
public
éé 
const
éé 
string
éé $
PermissionAssignFailed
éé 2
=
éé3 4
$str
éé5 g
;
éég h
public
ññ 
const
ññ 
string
ññ '
UserPermissionAssignError
ññ 5
=
ññ6 7
$str
ññ8 w
;
ññw x
public
õõ 
const
õõ 
string
õõ &
AddingMissingPermissions
õõ 4
=
õõ5 6
$str
õõ7 S
;
õõS T
public
££ 
const
££ 
string
££ %
PermissionAlreadyExists
££ 3
=
££4 5
$str
££6 M
;
££M N
public
´´ 
const
´´ 
string
´´ 
PermissionAdded
´´ +
=
´´, -
$str
´´. @
;
´´@ A
public
≥≥ 
const
≥≥ 
string
≥≥ %
UserPermissionsAssigned
≥≥ 3
=
≥≥4 5
$str
≥≥6 l
;
≥≥l m
public
∏∏ 
const
∏∏ 
string
∏∏ +
ErrorAddingMissingPermissions
∏∏ 9
=
∏∏: ;
$str
∏∏< c
;
∏∏c d
public
ƒƒ 
const
ƒƒ 
string
ƒƒ 
ProductCreating
ƒƒ +
=
ƒƒ, -
$str
ƒƒ. V
;
ƒƒV W
public
ÃÃ 
const
ÃÃ 
string
ÃÃ 
ProductCreated
ÃÃ *
=
ÃÃ+ ,
$str
ÃÃ- W
;
ÃÃW X
public
‘‘ 
const
‘‘ 
string
‘‘ 
ProductUpdating
‘‘ +
=
‘‘, -
$str
‘‘. V
;
‘‘V W
public
‹‹ 
const
‹‹ 
string
‹‹ 
ProductUpdated
‹‹ *
=
‹‹+ ,
$str
‹‹- R
;
‹‹R S
public
‰‰ 
const
‰‰ 
string
‰‰ 
ProductDeleting
‰‰ +
=
‰‰, -
$str
‰‰. Q
;
‰‰Q R
public
ÏÏ 
const
ÏÏ 
string
ÏÏ 
ProductDeleted
ÏÏ *
=
ÏÏ+ ,
$str
ÏÏ- N
;
ÏÏN O
public
¯¯ 
const
¯¯ 
string
¯¯ 
CategoryCreating
¯¯ ,
=
¯¯- .
$str
¯¯/ [
;
¯¯[ \
public
ÄÄ 
const
ÄÄ 
string
ÄÄ 
CategoryCreated
ÄÄ +
=
ÄÄ, -
$str
ÄÄ. \
;
ÄÄ\ ]
public
àà 
const
àà 
string
àà 
CategoryUpdating
àà ,
=
àà- .
$str
àà/ [
;
àà[ \
public
êê 
const
êê 
string
êê 
CategoryUpdated
êê +
=
êê, -
$str
êê. W
;
êêW X
public
òò 
const
òò 
string
òò 
CategoryDeleting
òò ,
=
òò- .
$str
òò/ V
;
òòV W
public
†† 
const
†† 
string
†† 
CategoryDeleted
†† +
=
††, -
$str
††. S
;
††S T
public
¨¨ 
const
¨¨ 
string
¨¨ 
UserLoggedIn
¨¨ (
=
¨¨) *
$str
¨¨+ _
;
¨¨_ `
public
¥¥ 
const
¥¥ 
string
¥¥ 
UserLoggedOut
¥¥ )
=
¥¥* +
$str
¥¥, `
;
¥¥` a
public
ºº 
const
ºº 
string
ºº !
InvalidLoginAttempt
ºº /
=
ºº0 1
$str
ºº2 _
;
ºº_ `
public
ƒƒ 
const
ƒƒ 
string
ƒƒ 
AccountLocked
ƒƒ )
=
ƒƒ* +
$str
ƒƒ, R
;
ƒƒR S
public
ÃÃ 
const
ÃÃ 
string
ÃÃ *
PasswordChangeRequestStarted
ÃÃ 8
=
ÃÃ9 :
$str
ÃÃ; q
;
ÃÃq r
public
ÿÿ 
const
ÿÿ 
string
ÿÿ 
	SlowQuery
ÿÿ %
=
ÿÿ& '
$str
ÿÿ( \
;
ÿÿ\ ]
public
‡‡ 
const
‡‡ 
string
‡‡ 
HighMemoryUsage
‡‡ +
=
‡‡, -
$str
‡‡. h
;
‡‡h i
public
ËË 
const
ËË 
string
ËË %
DatabaseConnectionIssue
ËË 3
=
ËË4 5
$str
ËË6 W
;
ËËW X
public
ÌÌ 
const
ÌÌ 
string
ÌÌ 3
%PasswordCannotBeNullOrEmptyForHashing
ÌÌ A
=
ÌÌB C
$str
ÌÌD m
;
ÌÌm n
public
ÓÓ 
const
ÓÓ 
string
ÓÓ $
PasswordHashingStarted
ÓÓ 2
=
ÓÓ3 4
$str
ÓÓ5 b
;
ÓÓb c
public
ÔÔ 
const
ÔÔ 
string
ÔÔ (
PasswordHashedSuccessfully
ÔÔ 6
=
ÔÔ7 8
$str
ÔÔ9 Y
;
ÔÔY Z
public
 
const
 
string
 &
PasswordHashingSaltError
 4
=
5 6
$str
7 j
;
j k
public
ÒÒ 
const
ÒÒ 
string
ÒÒ )
PasswordHashingGenericError
ÒÒ 7
=
ÒÒ8 9
$str
ÒÒ: e
;
ÒÒe f
public
ÚÚ 
const
ÚÚ 
string
ÚÚ >
0PasswordOrHashCannotBeNullOrEmptyForVerification
ÚÚ L
=
ÚÚM N
$strÚÚO É
;ÚÚÉ Ñ
public
ÛÛ 
const
ÛÛ 
string
ÛÛ )
PasswordVerificationStarted
ÛÛ 7
=
ÛÛ8 9
$str
ÛÛ: Y
;
ÛÛY Z
public
ÙÙ 
const
ÙÙ 
string
ÙÙ +
PasswordVerificationResultLog
ÙÙ 9
=
ÙÙ: ;
$str
ÙÙ< Y
;
ÙÙY Z
public
ıı 
const
ıı 
string
ıı +
PasswordVerificationSaltError
ıı 9
=
ıı: ;
$str
ıı< p
;
ııp q
public
ˆˆ 
const
ˆˆ 
string
ˆˆ .
 PasswordVerificationGenericError
ˆˆ <
=
ˆˆ= >
$str
ˆˆ? k
;
ˆˆk l
public
˜˜ 
const
˜˜ 
string
˜˜ 
HashFormatLog
˜˜ )
=
˜˜* +
$str
˜˜, ?
;
˜˜? @
public
¯¯ 
const
¯¯ 
string
¯¯ 
HashLengthLog
¯¯ )
=
¯¯* +
$str
¯¯, @
;
¯¯@ A
public
˘˘ 
const
˘˘ 
string
˘˘ 
WorkFactorLog
˘˘ )
=
˘˘* +
$str
˘˘, >
;
˘˘> ?
public
˙˙ 
const
˙˙ 
string
˙˙ $
ErrorParsingWorkFactor
˙˙ 2
=
˙˙3 4
$str
˙˙5 _
;
˙˙_ `
public
˝˝ 
const
˝˝ 
string
˝˝ 
ErrorCreatingUser
˝˝ -
=
˝˝. /
$str
˝˝0 _
;
˝˝_ `
public
˛˛ 
const
˛˛ 
string
˛˛ 
ErrorUpdatingUser
˛˛ -
=
˛˛. /
$str
˛˛0 m
;
˛˛m n
public
ˇˇ 
const
ˇˇ 
string
ˇˇ 
LoginAttempt
ˇˇ (
=
ˇˇ) *
$str
ˇˇ+ [
;
ˇˇ[ \
public
ÄÄ 
const
ÄÄ 
string
ÄÄ !
UserNotFoundBySicil
ÄÄ /
=
ÄÄ0 1
$str
ÄÄ2 `
;
ÄÄ` a
public
ÅÅ 
const
ÅÅ 
string
ÅÅ 
	UserFound
ÅÅ %
=
ÅÅ& '
$str
ÅÅ( [
;
ÅÅ[ \
public
ÇÇ 
const
ÇÇ 
string
ÇÇ *
PasswordVerificationStarting
ÇÇ 8
=
ÇÇ9 :
$str
ÇÇ; f
;
ÇÇf g
public
ÉÉ 
const
ÉÉ 
string
ÉÉ 

HashLength
ÉÉ &
=
ÉÉ' (
$str
ÉÉ) =
;
ÉÉ= >
public
ÑÑ 
const
ÑÑ 
string
ÑÑ 

HashFormat
ÑÑ &
=
ÑÑ' (
$str
ÑÑ) <
;
ÑÑ< =
public
ÖÖ 
const
ÖÖ 
string
ÖÖ (
PasswordVerificationResult
ÖÖ 6
=
ÖÖ7 8
$str
ÖÖ9 V
;
ÖÖV W
public
ÜÜ 
const
ÜÜ 
string
ÜÜ '
PasswordVerificationError
ÜÜ 5
=
ÜÜ6 7
$str
ÜÜ8 b
;
ÜÜb c
public
áá 
const
áá 
string
áá $
InvalidPasswordAttempt
áá 2
=
áá3 4
$str
áá5 Y
;
ááY Z
public
àà 
const
àà 
string
àà 
LoginSuccess
àà (
=
àà) *
$str
àà+ F
;
ààF G
public
ââ 
const
ââ 
string
ââ 
RegisterAttempt
ââ +
=
ââ, -
$str
ââ. Q
;
ââQ R
public
ää 
const
ää 
string
ää #
UsernameAlreadyExists
ää 1
=
ää2 3
$str
ää4 U
;
ääU V
public
ãã 
const
ãã 
string
ãã 
PasswordHashed
ãã *
=
ãã+ ,
$str
ãã- ]
;
ãã] ^
public
åå 
const
åå 
string
åå "
UserAdminStatusCheck
åå 0
=
åå1 2
$str
åå3 k
;
ååk l
public
çç 
const
çç 
string
çç 
UserRegistered
çç *
=
çç+ ,
$str
çç- k
;
ççk l
public
éé 
const
éé 
string
éé 
TokenGenerated
éé *
=
éé+ ,
$str
éé- S
;
ééS T
public
èè 
const
èè 
string
èè 
RegistrationError
èè -
=
èè. /
$str
èè0 Y
;
èèY Z
public
êê 
const
êê 
string
êê #
ChangePasswordAttempt
êê 1
=
êê2 3
$str
êê4 a
;
êêa b
public
ëë 
const
ëë 
string
ëë "
IncorrectOldPassword
ëë 0
=
ëë1 2
$str
ëë3 X
;
ëëX Y
public
íí 
const
íí 
string
íí 
PasswordMismatch
íí ,
=
íí- .
$str
íí/ U
;
ííU V
public
ìì 
const
ìì 
string
ìì )
PasswordChangedSuccessfully
ìì 7
=
ìì8 9
$str
ìì: j
;
ììj k
public
îî 
const
îî 
string
îî !
ChangePasswordError
îî /
=
îî0 1
$str
îî2 e
;
îîe f
public
ïï 
const
ïï 
string
ïï /
!ErrorGettingCustomUserPermissions
ïï =
=
ïï> ?
$str
ïï@ z
;
ïïz {
public
ññ 
const
ññ 
string
ññ (
AssigningPermissionsToRole
ññ 6
=
ññ7 8
$str
ññ9 m
;
ññm n
public
óó 
const
óó 
string
óó '
PermissionsAssignedToRole
óó 5
=
óó6 7
$str
óó8 t
;
óót u
public
òò 
const
òò 
string
òò -
ErrorAssigningPermissionsToRole
òò ;
=
òò< =
$str
òò> d
;
òòd e
public
ôô 
const
ôô 
string
ôô #
UserPermissionUpdated
ôô 1
=
ôô2 3
$str
ôô4 }
;
ôô} ~
public
öö 
const
öö 
string
öö !
UserPermissionAdded
öö /
=
öö0 1
$str
öö2 w
;
ööw x
public
õõ 
const
õõ 
string
õõ *
ErrorAssigningUserPermission
õõ 8
=
õõ9 :
$str
õõ; z
;
õõz {
public
úú 
const
úú 
string
úú #
UserPermissionRemoved
úú 1
=
úú2 3
$str
úú4 m
;
úúm n
public
ùù 
const
ùù 
string
ùù .
 UserPermissionNotFoundForRemoval
ùù <
=
ùù= >
$strùù? Ö
;ùùÖ Ü
public
ûû 
const
ûû 
string
ûû )
ErrorRemovingUserPermission
ûû 7
=
ûû8 9
$str
ûû: {
;
ûû{ |
public
üü 
const
üü 
string
üü "
UserPermissionsReset
üü 0
=
üü1 2
$strüü3 Ä
;üüÄ Å
public
†† 
const
†† 
string
†† *
UserPermissionsResetNoAction
†† 8
=
††9 :
$str
††; m
;
††m n
public
°° 
const
°° 
string
°° +
ErrorResettingUserPermissions
°° 9
=
°°: ;
$str
°°< o
;
°°o p
public
¢¢ 
const
¢¢ 
string
¢¢ )
ErrorCheckingUserPermission
¢¢ 7
=
¢¢8 9
$str¢¢: Å
;¢¢Å Ç
public
££ 
const
££ 
string
££ (
ErrorGettingAllPermissions
££ 6
=
££7 8
$str
££9 ]
;
££] ^
public
§§ 
const
§§ 
string
§§ ,
ErrorGettingPermissionsByGroup
§§ :
=
§§; <
$str
§§= k
;
§§k l
public
•• 
const
•• 
string
•• +
ErrorGettingPermissionsByRole
•• 9
=
••: ;
$str
••< j
;
••j k
public
¶¶ 
const
¶¶ 
string
¶¶ +
ErrorGettingPermissionsByUser
¶¶ 9
=
¶¶: ;
$str
¶¶< q
;
¶¶q r
public
´´ 
const
´´ 
string
´´ '
AssigningPermissionToUser
´´ 5
=
´´6 7
$str´´8 é
;´´é è
public
∞∞ 
const
∞∞ 
string
∞∞ &
PermissionAssignedToUser
∞∞ 4
=
∞∞5 6
$str∞∞7 ì
;∞∞ì î
public
µµ 
const
µµ 
string
µµ (
RemovingPermissionFromUser
µµ 6
=
µµ7 8
$str
µµ9 w
;
µµw x
public
∫∫ 
const
∫∫ 
string
∫∫ '
PermissionRemovedFromUser
∫∫ 5
=
∫∫6 7
$str
∫∫8 ~
;
∫∫~ 
public
øø 
const
øø 
string
øø )
ResettingPermissionsForUser
øø 7
=
øø8 9
$str
øø: o
;
øøo p
public
ƒƒ 
const
ƒƒ 
string
ƒƒ %
PermissionsResetForUser
ƒƒ 3
=
ƒƒ4 5
$str
ƒƒ6 s
;
ƒƒs t
public
…… 
const
…… 
string
…… 
FetchingAllUsers
…… ,
=
……- .
$str
……/ P
;
……P Q
public
—— 
const
—— 
string
—— &
UsersFetchedSuccessfully
—— 4
=
——5 6
$str
——7 [
;
——[ \
public
÷÷ 
const
÷÷ 
string
÷÷  
ErrorFetchingUsers
÷÷ .
=
÷÷/ 0
$str
÷÷1 ]
;
÷÷] ^
public
ﬁﬁ 
const
ﬁﬁ 
string
ﬁﬁ 
FetchingUserById
ﬁﬁ ,
=
ﬁﬁ- .
$str
ﬁﬁ/ V
;
ﬁﬁV W
public
„„ 
const
„„ 
string
„„ 
UserNotFound
„„ (
=
„„) *
$str
„„+ B
;
„„B C
public
ÎÎ 
const
ÎÎ 
string
ÎÎ %
UserFetchedSuccessfully
ÎÎ 3
=
ÎÎ4 5
$str
ÎÎ6 c
;
ÎÎc d
public
ÛÛ 
const
ÛÛ 
string
ÛÛ 
ErrorFetchingUser
ÛÛ -
=
ÛÛ. /
$str
ÛÛ0 f
;
ÛÛf g
public
˚˚ 
const
˚˚ 
string
˚˚ !
RouteBodyIdMismatch
˚˚ /
=
˚˚0 1
$str
˚˚2 w
;
˚˚w x
public
ÉÉ 
const
ÉÉ 
string
ÉÉ #
UserNotFoundForUpdate
ÉÉ 1
=
ÉÉ2 3
$str
ÉÉ4 g
;
ÉÉg h
public
ãã 
const
ãã 
string
ãã -
ValidationErrorDuringUserUpdate
ãã ;
=
ãã< =
$strãã> å
;ããå ç
public
ìì 
const
ìì 
string
ìì #
UserNotFoundForDelete
ìì 1
=
ìì2 3
$str
ìì4 c
;
ììc d
public
ïï 
const
ïï 
string
ïï  
InvalidCredentials
ïï .
=
ïï/ 0
$str
ïï1 T
;
ïïT U
public
öö 
const
öö 
string
öö 
UserAlreadyExists
öö -
=
öö. /
$str
öö0 Y
;
ööY Z
public
üü 
const
üü 
string
üü  
SicilAlreadyExists
üü .
=
üü/ 0
$str
üü1 [
;
üü[ \
public
§§ 
const
§§ 
string
§§ #
LogSicilAlreadyExists
§§ 1
=
§§2 3
$str
§§4 W
;
§§W X
public
©© 
const
©© 
string
©© $
LogUserNotFoundBySicil
©© 2
=
©©3 4
$str
©©5 c
;
©©c d
public
ÆÆ 
const
ÆÆ 
string
ÆÆ '
LogInvalidPasswordAttempt
ÆÆ 5
=
ÆÆ6 7
$str
ÆÆ8 \
;
ÆÆ\ ]
public
≥≥ 
const
≥≥ 
string
≥≥ 
LogLoginSuccess
≥≥ +
=
≥≥, -
$str
≥≥. I
;
≥≥I J
public
∏∏ 
const
∏∏ 
string
∏∏  
LogRegisterAttempt
∏∏ .
=
∏∏/ 0
$str
∏∏1 L
;
∏∏L M
public
ΩΩ 
const
ΩΩ 
string
ΩΩ '
LogPasswordHashedForSicil
ΩΩ 5
=
ΩΩ6 7
$str
ΩΩ8 `
;
ΩΩ` a
public
¬¬ 
const
¬¬ 
string
¬¬ (
LogUserRegisteredWithSicil
¬¬ 6
=
¬¬7 8
$str
¬¬9 o
;
¬¬o p
public
«« 
const
«« 
string
«« '
LogTokenGeneratedForSicil
«« 5
=
««6 7
$str
««8 V
;
««V W
public
ÃÃ 
const
ÃÃ 
string
ÃÃ +
LogRegistrationErrorWithSicil
ÃÃ 9
=
ÃÃ: ;
$str
ÃÃ< ]
;
ÃÃ] ^
public
‘‘ 
const
‘‘ 
string
‘‘ #
CreatingUserWithSicil
‘‘ 1
=
‘‘2 3
$str
‘‘4 ]
;
‘‘] ^
public
‹‹ 
const
‹‹ 
string
‹‹ "
UserCreatedWithSicil
‹‹ 0
=
‹‹1 2
$str
‹‹3 i
;
‹‹i j
public
·· 
const
·· 
string
·· (
ErrorCreatingUserWithSicil
·· 6
=
··7 8
$str
··9 z
;
··z {
}
‚‚ 
}„„ ¯
\C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Constants\JwtTokenSettings.cs
	namespace 	
Stock
 
. 
Application 
. 
	Constants %
{ 
public 

static 
class 
JwtTokenSettings (
{ 
public 
const 
string 
Audience $
=% &
$str' =
;= >
public 
const 
string 
Issuer "
=# $
$str% 9
;9 :
public 
const 
string 
	SecretKey %
=& '
$str( ?
;? @
public 
const 
string $
TokenExpirationInMinutes 4
=5 6
$str7 ]
;] ^
}		 
}

 Á
`C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Constants\PermissionGroupNames.cs
	namespace 	
Stock
 
. 
Application 
. 
	Constants %
{ 
public 

static 
class  
PermissionGroupNames ,
{ 
public 
const 
string 
General #
=$ %
$str& /
;/ 0
public 
const 
string 
Users !
=" #
$str$ +
;+ ,
public 
const 
string 
Roles !
=" #
$str$ +
;+ ,
public 
const 
string 
Other !
=" #
$str$ +
;+ ,
}

 
} ‡
YC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Constants\JwtClaimTypes.cs
	namespace 	
Stock
 
. 
Application 
. 
	Constants %
{ 
public 

static 
class 
JwtClaimTypes %
{ 
public 
const 
string 
Sicil !
=" #
$str$ +
;+ ,
public 
const 
string 
RoleName $
=% &
$str' 2
;2 3
public 
const 
string 
RoleId "
=# $
$str% .
;. /
public 
const 
string 

Permission &
=' (
$str) 5
;5 6
}		 
}

 êÅ
YC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Constants\ErrorMessages.cs
	namespace 	
Stock
 
. 
Application 
. 
	Constants %
{ 
public 

static 
class 
ErrorMessages %
{ 
public 
const 
string 
GeneralServerError .
=/ 0
$str	1 ¶
;
¶ ß
public## 
const## 
string## 
ValidationError## +
=##, -
$str##. G
;##G H
public++ 
const++ 
string++ 
NotFound++ $
=++% &
$str++' 9
;++9 :
public33 
const33 
string33 
Unauthorized33 (
=33) *
$str33+ S
;33S T
public;; 
const;; 
string;; 

BadRequest;; &
=;;' (
$str;;) 9
;;;9 :
public@@ 
const@@ 
string@@ 
InvalidOperation@@ ,
=@@- .
$str@@/ @
;@@@ A
publicEE 
constEE 
stringEE 
DatabaseErrorEE )
=EE* +
$strEE, G
;EEG H
publicMM 
constMM 
stringMM  
UserNotFoundSpecificMM 0
=MM1 2
$strMM3 W
;MMW X
publicRR 
constRR 
stringRR 
RouteBodyIdMismatchRR /
=RR0 1
$strRR2 l
;RRl m
public^^ 
const^^ 
string^^ 
UserNotFound^^ (
=^^) *
$str^^+ A
;^^A B
publiccc 
constcc 
stringcc 
InvalidCredentialscc .
=cc/ 0
$strcc1 T
;ccT U
publichh 
consthh 
stringhh 
UserAlreadyExistshh -
=hh. /
$strhh0 Y
;hhY Z
publicmm 
constmm 
stringmm 
SicilAlreadyExistsmm .
=mm/ 0
$strmm1 [
;mm[ \
publicrr 
constrr 
stringrr 
PasswordMismatchrr ,
=rr- .
$strrr/ D
;rrD E
publicww 
constww 
stringww  
OldPasswordIncorrectww 0
=ww1 2
$strww3 H
;wwH I
public 
const 
string 
UserCreateError +
=, -
$str. ]
;] ^
public
áá 
const
áá 
string
áá 
UserUpdateError
áá +
=
áá, -
$str
áá. ]
;
áá] ^
public
èè 
const
èè 
string
èè 
UserDeleteError
èè +
=
èè, -
$str
èè. Y
;
èèY Z
public
îî 
const
îî 
string
îî 
UsernameEmpty
îî )
=
îî* +
$str
îî, F
;
îîF G
public
ôô 
const
ôô 
string
ôô 
PasswordEmpty
ôô )
=
ôô* +
$str
ôô, >
;
ôô> ?
public
ûû 
const
ûû 
string
ûû 

SicilEmpty
ûû &
=
ûû' (
$str
ûû) D
;
ûûD E
public
££ 
const
££ 
string
££ 
AdiSoyadiEmpty
££ *
=
££+ ,
$str
££- B
;
££B C
public
®® 
const
®® 
string
®® 
ValidRoleRequired
®® -
=
®®. /
$str
®®0 N
;
®®N O
public
∞∞ 
const
∞∞ 
string
∞∞ &
SicilAlreadyInUsePartial
∞∞ 4
=
∞∞5 6
$str
∞∞7 ^
;
∞∞^ _
public
∏∏ 
const
∏∏ 
string
∏∏ 
SicilConflict
∏∏ )
=
∏∏* +
$str
∏∏, K
;
∏∏K L
public
ΩΩ 
const
ΩΩ 
string
ΩΩ 
UserCreationError
ΩΩ -
=
ΩΩ. /
$str
ΩΩ0 Z
;
ΩΩZ [
public
¬¬ 
const
¬¬ 
string
¬¬ 
InvalidUserId
¬¬ )
=
¬¬* +
$str
¬¬, H
;
¬¬H I
public
   
const
   
string
   
UserNotFoundById
   ,
=
  - .
$str
  / S
;
  S T
public
““ 
const
““ 
string
““ 
DuplicateUsername
““ -
=
““. /
$str
““0 Z
;
““Z [
public
⁄⁄ 
const
⁄⁄ 
string
⁄⁄ 
DuplicateSicil
⁄⁄ *
=
⁄⁄+ ,
$str
⁄⁄- X
;
⁄⁄X Y
public
‚‚ 
const
‚‚ 
string
‚‚ 
CannotDeleteSelf
‚‚ ,
=
‚‚- .
$str
‚‚/ M
;
‚‚M N
public
ÍÍ 
const
ÍÍ 
string
ÍÍ 
UserUpdateFailed
ÍÍ ,
=
ÍÍ- .
$str
ÍÍ/ J
;
ÍÍJ K
public
ÚÚ 
const
ÚÚ 
string
ÚÚ 
UserDeleteFailed
ÚÚ ,
=
ÚÚ- .
$str
ÚÚ/ F
;
ÚÚF G
public
˙˙ 
const
˙˙ 
string
˙˙ 
UserCreateFailed
˙˙ ,
=
˙˙- .
$str
˙˙/ J
;
˙˙J K
public
ˇˇ 
const
ˇˇ 
string
ˇˇ #
CannotDeleteAdminUser
ˇˇ 1
=
ˇˇ2 3
$str
ˇˇ4 Q
;
ˇˇQ R
public
ÑÑ 
const
ÑÑ 
string
ÑÑ 
	NameEmpty
ÑÑ %
=
ÑÑ& '
$str
ÑÑ( 7
;
ÑÑ7 8
public
ââ 
const
ââ 
string
ââ 
SurnameEmpty
ââ (
=
ââ) *
$str
ââ+ =
;
ââ= >
public
íí 
const
íí 
string
íí 
RoleNotFound
íí (
=
íí) *
$str
íí+ ;
;
íí; <
public
öö 
const
öö 
string
öö "
RoleNotFoundSpecific
öö 0
=
öö1 2
$str
öö3 Q
;
ööQ R
public
¢¢ 
const
¢¢ 
string
¢¢ 
RoleCreateError
¢¢ +
=
¢¢, -
$str
¢¢. W
;
¢¢W X
public
ßß 
const
ßß 
string
ßß 
ConcurrencyError
ßß ,
=
ßß- .
$str
ßß/ }
;
ßß} ~
public
ØØ 
const
ØØ 
string
ØØ 
RoleUpdateError
ØØ +
=
ØØ, -
$str
ØØ. W
;
ØØW X
public
¥¥ 
const
¥¥ 
string
¥¥ #
RoleInUseCannotDelete
¥¥ 1
=
¥¥2 3
$str¥¥4 Ç
;¥¥Ç É
public
ºº 
const
ºº 
string
ºº 
RoleDeleteError
ºº +
=
ºº, -
$str
ºº. S
;
ººS T
public
ƒƒ 
const
ƒƒ 
string
ƒƒ 
RoleNotFoundById
ƒƒ ,
=
ƒƒ- .
$str
ƒƒ/ M
;
ƒƒM N
public
ÃÃ 
const
ÃÃ 
string
ÃÃ 
DuplicateRoleName
ÃÃ -
=
ÃÃ. /
$str
ÃÃ0 T
;
ÃÃT U
public
—— 
const
—— 
string
—— 
InvalidRoleId
—— )
=
——* +
$str
——, A
;
——A B
public
÷÷ 
const
÷÷ 
string
÷÷ 
InvalidRoleName
÷÷ +
=
÷÷, -
$str
÷÷. A
;
÷÷A B
public
€€ 
const
€€ 
string
€€ #
CannotDeleteAdminRole
€€ 1
=
€€2 3
$str
€€4 K
;
€€K L
public
„„ 
const
„„ 
string
„„ 
RoleUpdateFailed
„„ ,
=
„„- .
$str
„„/ D
;
„„D E
public
ÎÎ 
const
ÎÎ 
string
ÎÎ 
RoleDeleteFailed
ÎÎ ,
=
ÎÎ- .
$str
ÎÎ/ @
;
ÎÎ@ A
public
ÛÛ 
const
ÛÛ 
string
ÛÛ 
RoleCreateFailed
ÛÛ ,
=
ÛÛ- .
$str
ÛÛ/ D
;
ÛÛD E
public
¸¸ 
const
¸¸ 
string
¸¸  
PermissionNotFound
¸¸ .
=
¸¸/ 0
$str
¸¸1 B
;
¸¸B C
public
ÑÑ 
const
ÑÑ 
string
ÑÑ $
PermissionNotFoundById
ÑÑ 2
=
ÑÑ3 4
$str
ÑÑ5 U
;
ÑÑU V
public
åå 
const
åå 
string
åå %
DuplicatePermissionName
åå 3
=
åå4 5
$str
åå6 \
;
åå\ ]
public
ëë 
const
ëë 
string
ëë !
InvalidPermissionId
ëë /
=
ëë0 1
$str
ëë2 I
;
ëëI J
public
ññ 
const
ññ 
string
ññ #
InvalidPermissionName
ññ 1
=
ññ2 3
$str
ññ4 I
;
ññI J
public
ûû 
const
ûû 
string
ûû $
PermissionUpdateFailed
ûû 2
=
ûû3 4
$str
ûû5 L
;
ûûL M
public
¶¶ 
const
¶¶ 
string
¶¶ $
PermissionDeleteFailed
¶¶ 2
=
¶¶3 4
$str
¶¶5 H
;
¶¶H I
public
ÆÆ 
const
ÆÆ 
string
ÆÆ $
PermissionCreateFailed
ÆÆ 2
=
ÆÆ3 4
$str
ÆÆ5 L
;
ÆÆL M
public
∂∂ 
const
∂∂ 
string
∂∂ '
UserPermissionAssignError
∂∂ 5
=
∂∂6 7
$str
∂∂8 l
;
∂∂l m
public
ææ 
const
ææ 
string
ææ %
MissingPermissionsError
ææ 3
=
ææ4 5
$str
ææ6 e
;
ææe f
public
√√ 
const
√√ 
string
√√ '
PermissionAssignmentError
√√ 5
=
√√6 7
$str
√√8 a
;
√√a b
public
ÃÃ 
const
ÃÃ 
string
ÃÃ 
ProductNotFound
ÃÃ +
=
ÃÃ, -
$str
ÃÃ. ?
;
ÃÃ? @
public
‘‘ 
const
‘‘ 
string
‘‘  
ProductCreateError
‘‘ .
=
‘‘/ 0
$str
‘‘1 [
;
‘‘[ \
public
‹‹ 
const
‹‹ 
string
‹‹  
ProductUpdateError
‹‹ .
=
‹‹/ 0
$str
‹‹1 [
;
‹‹[ \
public
‰‰ 
const
‰‰ 
string
‰‰  
ProductDeleteError
‰‰ .
=
‰‰/ 0
$str
‰‰1 W
;
‰‰W X
public
ÈÈ 
const
ÈÈ 
string
ÈÈ "
DuplicateProductName
ÈÈ 0
=
ÈÈ1 2
$str
ÈÈ3 W
;
ÈÈW X
public
ÚÚ 
const
ÚÚ 
string
ÚÚ 
CategoryNotFound
ÚÚ ,
=
ÚÚ- .
$str
ÚÚ/ D
;
ÚÚD E
public
˙˙ 
const
˙˙ 
string
˙˙ !
CategoryCreateError
˙˙ /
=
˙˙0 1
$str
˙˙2 `
;
˙˙` a
public
ÇÇ 
const
ÇÇ 
string
ÇÇ !
CategoryUpdateError
ÇÇ /
=
ÇÇ0 1
$str
ÇÇ2 `
;
ÇÇ` a
public
ää 
const
ää 
string
ää !
CategoryDeleteError
ää /
=
ää0 1
$str
ää2 \
;
ää\ ]
public
èè 
const
èè 
string
èè #
DuplicateCategoryName
èè 1
=
èè2 3
$str
èè4 \
;
èè\ ]
public
òò 
const
òò 
string
òò 
AccountLocked
òò )
=
òò* +
$str
òò, q
;
òòq r
public
ùù 
const
ùù 
string
ùù 
AccountDisabled
ùù +
=
ùù, -
$str
ùù. O
;
ùùO P
public
¢¢ 
const
¢¢ 
string
¢¢ 
SessionExpired
¢¢ *
=
¢¢+ ,
$str
¢¢- _
;
¢¢_ `
public
ßß 
const
ßß 
string
ßß 
InvalidToken
ßß (
=
ßß) *
$str
ßß+ <
;
ßß< =
public
¨¨ 
const
¨¨ 
string
¨¨ 
TokenExpired
¨¨ (
=
¨¨) *
$str
¨¨+ @
;
¨¨@ A
public
∏∏ 
const
∏∏ 
string
∏∏ %
DatabaseConnectionError
∏∏ 3
=
∏∏4 5
$str
∏∏6 W
;
∏∏W X
public
¿¿ 
const
¿¿ 
string
¿¿  
DatabaseQueryError
¿¿ .
=
¿¿/ 0
$str
¿¿1 O
;
¿¿O P
public
»» 
const
»» 
string
»» !
DatabaseUpdateError
»» /
=
»»0 1
$str
»»2 U
;
»»U V
public
–– 
const
–– 
string
–– !
DatabaseInsertError
–– /
=
––0 1
$str
––2 Q
;
––Q R
public
ÿÿ 
const
ÿÿ 
string
ÿÿ !
DatabaseDeleteError
ÿÿ /
=
ÿÿ0 1
$str
ÿÿ2 P
;
ÿÿP Q
public
‡‡ 
const
‡‡ 
string
‡‡ &
DatabaseConcurrencyError
‡‡ 4
=
‡‡5 6
$str
‡‡7 \
;
‡‡\ ]
public
ÂÂ 
const
ÂÂ 
string
ÂÂ $
DatabaseOperationError
ÂÂ 2
=
ÂÂ3 4
$str
ÂÂ5 ^
;
ÂÂ^ _
public
ÒÒ 
const
ÒÒ 
string
ÒÒ 
FileNotFound
ÒÒ (
=
ÒÒ) *
$str
ÒÒ+ B
;
ÒÒB C
public
˘˘ 
const
˘˘ 
string
˘˘ 
FileUploadError
˘˘ +
=
˘˘, -
$str
˘˘. I
;
˘˘I J
public
ÅÅ 
const
ÅÅ 
string
ÅÅ 
FileDeleteError
ÅÅ +
=
ÅÅ, -
$str
ÅÅ. G
;
ÅÅG H
public
ââ 
const
ââ 
string
ââ 
InvalidFileType
ââ +
=
ââ, -
$str
ââ. H
;
ââH I
public
ëë 
const
ëë 
string
ëë 
FileSizeTooLarge
ëë ,
=
ëë- .
$str
ëë/ L
;
ëëL M
public
ùù 
const
ùù 
string
ùù 
RequiredField
ùù )
=
ùù* +
$str
ùù, C
;
ùùC D
public
•• 
const
•• 
string
•• 
InvalidFormat
•• )
=
••* +
$str
••, J
;
••J K
public
ÆÆ 
const
ÆÆ 
string
ÆÆ 
StringTooLong
ÆÆ )
=
ÆÆ* +
$str
ÆÆ, b
;
ÆÆb c
public
∑∑ 
const
∑∑ 
string
∑∑ 
StringTooShort
∑∑ *
=
∑∑+ ,
$str
∑∑- b
;
∑∑b c
public
ºº 
const
ºº 
string
ºº 
InvalidEmail
ºº (
=
ºº) *
$str
ºº+ E
;
ººE F
public
¡¡ 
const
¡¡ 
string
¡¡  
InvalidPhoneNumber
¡¡ .
=
¡¡/ 0
$str
¡¡1 M
;
¡¡M N
public
∆∆ 
const
∆∆ 
string
∆∆ 
InvalidDate
∆∆ '
=
∆∆( )
$str
∆∆* ;
;
∆∆; <
public
ŒŒ 
const
ŒŒ 
string
ŒŒ 
DateOutOfRange
ŒŒ *
=
ŒŒ+ ,
$str
ŒŒ- T
;
ŒŒT U
public
÷÷ 
const
÷÷ 
string
÷÷ 
NumberOutOfRange
÷÷ ,
=
÷÷- .
$str
÷÷/ U
;
÷÷U V
public
€€ 
const
€€ 
string
€€ 
MaxLengthError
€€ *
=
€€+ ,
$str
€€- X
;
€€X Y
public
‡‡ 
const
‡‡ 
string
‡‡ 
MinLengthError
‡‡ *
=
‡‡+ ,
$str
‡‡- U
;
‡‡U V
public
ÂÂ 
const
ÂÂ 
string
ÂÂ )
PasswordCannotBeNullOrEmpty
ÂÂ 7
=
ÂÂ8 9
$str
ÂÂ: M
;
ÂÂM N
public
ÊÊ 
const
ÊÊ 
string
ÊÊ #
PasswordHashingFailed
ÊÊ 1
=
ÊÊ2 3
$str
ÊÊ4 [
;
ÊÊ[ \
public
ÈÈ 
const
ÈÈ 
string
ÈÈ (
PasswordVerificationFailed
ÈÈ 6
=
ÈÈ7 8
$str
ÈÈ9 W
;
ÈÈW X
public
ÍÍ 
const
ÍÍ 
string
ÍÍ 
UsernameExists
ÍÍ *
=
ÍÍ+ ,
$str
ÍÍ- S
;
ÍÍS T
public
ÎÎ 
const
ÎÎ 
string
ÎÎ  
RegistrationFailed
ÎÎ .
=
ÎÎ/ 0
$str
ÎÎ1 O
;
ÎÎO P
public
ÏÏ 
const
ÏÏ 
string
ÏÏ 
IncorrectPassword
ÏÏ -
=
ÏÏ. /
$str
ÏÏ0 H
;
ÏÏH I
public
ÌÌ 
const
ÌÌ 
string
ÌÌ "
ChangePasswordFailed
ÌÌ 0
=
ÌÌ1 2
$str
ÌÌ3 \
;
ÌÌ\ ]
}
ÓÓ 
}ÔÔ ™
XC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Constants\ApiConstants.cs
	namespace 	
Stock
 
. 
Application 
. 
	Constants %
{ 
public 

static 
class 
ApiConstants $
{ 
public 
const 
string 
ApiBaseRoute (
=) *
$str+ 0
;0 1
public 
const 
string 
	AuthRoute %
=& '
$str( .
;. /
public## 
const## 
string## 

UsersRoute## &
=##' (
$str##) 0
;##0 1
public(( 
const(( 
string(( 

RolesRoute(( &
=((' (
$str(() 0
;((0 1
public-- 
const-- 
string-- 
PermissionsRoute-- ,
=--- .
$str--/ <
;--< =
public22 
const22 
string22 
ProductsRoute22 )
=22* +
$str22, 6
;226 7
public77 
const77 
string77 
CategoriesRoute77 +
=77, -
$str77. :
;77: ;
publicCC 
constCC 
stringCC 
SuccessMessageCC *
=CC+ ,
$strCC- I
;CCI J
publicKK 
constKK 
stringKK 
CreatedMessageKK *
=KK+ ,
$strKK- J
;KKJ K
publicSS 
constSS 
stringSS 
UpdatedMessageSS *
=SS+ ,
$strSS- J
;SSJ K
public[[ 
const[[ 
string[[ 
DeletedMessage[[ *
=[[+ ,
$str[[- F
;[[F G
publicgg 
constgg 
intgg 
DefaultPageSizegg (
=gg) *
$numgg+ -
;gg- .
publicoo 
constoo 
intoo 
MaxPageSizeoo $
=oo% &
$numoo' *
;oo* +
publicww 
constww 
intww 
DefaultPageNumberww *
=ww+ ,
$numww- .
;ww. /
}zz 
}{{ Æ
`C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Common\Mappings\ProductProfile.cs
	namespace 	
Stock
 
. 
Application 
. 
Common "
." #
Mappings# +
{		 
public

 

class

 
ProductProfile

 
:

  !
Profile

" )
{ 
public 
ProductProfile 
( 
) 
{ 	
	CreateMap 
< 
Product 
, 

ProductDto )
>) *
(* +
)+ ,
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
Name( ,
,, -
opt. 1
=>2 4
opt5 8
.8 9
MapFrom9 @
(@ A
srcA D
=>E G
srcH K
.K L
NameL P
.P Q
ValueQ V
)V W
)W X
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
Description( 3
,3 4
opt5 8
=>9 ;
opt< ?
.? @
MapFrom@ G
(G H
srcH K
=>L N
srcO R
.R S
DescriptionS ^
!=_ a
nullb f
?g h
srci l
.l m
Descriptionm x
.x y
Valuey ~
:	 Ä
null
Å Ö
)
Ö Ü
)
Ü á
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
StockQuantity( 5
,5 6
opt7 :
=>; =
opt> A
.A B
MapFromB I
(I J
srcJ M
=>N P
srcQ T
.T U

StockLevelU _
._ `
Value` e
)e f
)f g
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
CategoryName( 4
,4 5
opt6 9
=>: <
opt= @
.@ A
MapFromA H
(H I
srcI L
=>M O
srcP S
.S T
CategoryT \
!=] _
null` d
?e f
srcg j
.j k
Categoryk s
.s t
Namet x
:y z
null{ 
)	 Ä
)
Ä Å
;
Å Ç
} 	
} 
} ’
`C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Common\Mappings\MappingProfile.cs
	namespace 	
Stock
 
. 
Application 
. 
Common "
." #
Mappings# +
{ 
public 

class 
MappingProfile 
:  !
Profile" )
{ 
public		 
MappingProfile		 
(		 
)		 
{

 	
	CreateMap 
< 
User 
, 
UserDto #
># $
($ %
)% &
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
RoleName( 0
,0 1
opt2 5
=>6 8
opt9 <
.< =
MapFrom= D
(D E
srcE H
=>I K
srcL O
.O P
RoleP T
!=U W
nullX \
?] ^
src_ b
.b c
Rolec g
.g h
Nameh l
:m n
nullo s
)s t
)t u
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
Sicil( -
,- .
opt/ 2
=>3 5
opt6 9
.9 :
MapFrom: A
(A B
srcB E
=>F H
srcI L
.L M
SicilM R
)R S
)S T
;T U
	CreateMap 
< 
Role 
, 
RoleDto #
># $
($ %
)% &
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
	UserCount( 1
,1 2
opt3 6
=>7 9
opt: =
.= >
MapFrom> E
(E F
srcF I
=>J L
srcM P
.P Q
UsersQ V
.V W
CountW \
)\ ]
)] ^
;^ _
} 	
} 
} ¶
VC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Common\IQueryHandler.cs
	namespace 	
Stock
 
. 
Application 
. 
Common "
{ 
public 

	interface 
IQueryHandler "
<" #
in# %
TQuery& ,
,, -
TResult. 5
>5 6
where7 <
TQuery= C
:D E
IQueryF L
<L M
TResultM T
>T U
{ 
Task 
< 
TResult 
> 
Handle 
( 
TQuery #
query$ )
,) *
CancellationToken+ <
cancellationToken= N
)N O
;O P
}		 
}

 Ó
OC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Common\IQuery.cs
	namespace 	
Stock
 
. 
Application 
. 
Common "
{ 
public 

	interface 
IQuery 
< 
TResult #
># $
{ 
} 
} ù
`C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Common\Interfaces\IUserService.cs
	namespace 	
Stock
 
. 
Application 
. 
Common "
." #

Interfaces# -
{ 
public 

	interface 
IUserService !
{ 
Task 
< 
IEnumerable 
< 
User 
> 
> 
GetUsersAsync  -
(- .
). /
;/ 0
Task 
< 
User 
? 
> 
GetUserByIdAsync $
($ %
int% (
id) +
)+ ,
;, -
Task 
< 
User 
> 
CreateUserAsync "
(" #
User# '
user( ,
), -
;- .
Task 
< 
User 
> 
UpdateUserAsync "
(" #
int# &
id' )
,) *
User+ /
user0 4
)4 5
;5 6
Task 
< 
bool 
> 
DeleteUserAsync "
(" #
int# &
id' )
)) *
;* +
Task 
< 
bool 
> 
UpdateUserRoleAsync &
(& '
int' *
userId+ 1
,1 2
int3 6
roleId7 =
)= >
;> ?
} 
} œ
jC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Common\Interfaces\IUserPermissionService.cs
	namespace 	
Stock
 
. 
Application 
. 
Common "
." #

Interfaces# -
{ 
public 

	interface "
IUserPermissionService +
{ 
Task		 
<		 
List		 
<		 
PermissionDto		 
>		  
>		  !#
GetUserPermissionsAsync		" 9
(		9 :
int		: =
userId		> D
)		D E
;		E F
Task

 
<

 
bool

 
>

 '
AssignPermissionToUserAsync

 .
(

. /
int

/ 2
userId

3 9
,

9 :
int

; >
permissionId

? K
,

K L
bool

M Q
	isGranted

R [
)

[ \
;

\ ]
Task 
< 
bool 
> %
RemoveUserPermissionAsync ,
(, -
int- 0
userId1 7
,7 8
int9 <
permissionId= I
)I J
;J K
Task 
< 
bool 
> 
HasPermissionAsync %
(% &
int& )
userId* 0
,0 1
string2 8
permissionName9 G
)G H
;H I
Task 
< 
List 
< 
PermissionDto 
>  
>  !)
GetUserCustomPermissionsAsync" ?
(? @
int@ C
userIdD J
)J K
;K L
Task 
< 
bool 
> +
ResetUserToRolePermissionsAsync 2
(2 3
int3 6
userId7 =
)= >
;> ?
} 
} π
fC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Common\Interfaces\IPermissionService.cs
	namespace 	
Stock
 
. 
Application 
. 
Common "
." #

Interfaces# -
{ 
public 

	interface 
IPermissionService '
{ 
Task 
< 
List 
< 
PermissionDto 
>  
>  !"
GetAllPermissionsAsync" 8
(8 9
)9 :
;: ;
Task 
< 
List 
< 
PermissionGroupDto $
>$ %
>% &'
GetPermissionsByGroupsAsync' B
(B C
)C D
;D E
Task 
< 
List 
< 
PermissionDto 
>  
>  !'
GetPermissionsByRoleIdAsync" =
(= >
int> A
roleIdB H
)H I
;I J
Task%% 
<%% 
List%% 
<%% 
PermissionDto%% 
>%%  
>%%  !'
GetPermissionsByUserIdAsync%%" =
(%%= >
int%%> A
userId%%B H
)%%H I
;%%I J
Task.. 
<.. 
bool.. 
>.. (
AssignPermissionsToRoleAsync.. /
(../ 0
int..0 3
roleId..4 :
,..: ;
List..< @
<..@ A
int..A D
>..D E
permissionIds..F S
)..S T
;..T U
Task77 
<77 
bool77 
>77 '
AssignPermissionToUserAsync77 .
(77. /
int77/ 2
userId773 9
,779 :
int77; >
permissionId77? K
,77K L
bool77M Q
	isGranted77R [
=77\ ]
true77^ b
)77b c
;77c d
Task?? 
<?? 
bool?? 
>?? %
RemoveUserPermissionAsync?? ,
(??, -
int??- 0
userId??1 7
,??7 8
int??9 <
permissionId??= I
)??I J
;??J K
TaskGG 
<GG 
boolGG 
>GG +
ResetUserToRolePermissionsAsyncGG 2
(GG2 3
intGG3 6
userIdGG7 =
)GG= >
;GG> ?
TaskPP 
<PP 
boolPP 
>PP "
UserHasPermissionAsyncPP )
(PP) *
intPP* -
userIdPP. 4
,PP4 5
stringPP6 <
permissionNamePP= K
)PPK L
;PPL M
}QQ 
}RR ◊
bC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Common\Interfaces\ILoggerManager.cs
	namespace 	
Stock
 
. 
Application 
. 
Common "
." #

Interfaces# -
{ 
public

 

	interface

 
ILoggerManager

 #
<

# $
T

$ %
>

% &
{ 
void 
LogInfo 
( 
string 
message #
,# $
params% +
object, 2
[2 3
]3 4
args5 9
)9 :
;: ;
void 
LogWarn 
( 
string 
message #
,# $
params% +
object, 2
[2 3
]3 4
args5 9
)9 :
;: ;
void 
LogDebug 
( 
string 
message $
,$ %
params& ,
object- 3
[3 4
]4 5
args6 :
): ;
;; <
void&& 
LogError&& 
(&& 
string&& 
message&& $
,&&$ %
params&&& ,
object&&- 3
[&&3 4
]&&4 5
args&&6 :
)&&: ;
;&&; <
void.. 
LogError.. 
(.. 
	Exception.. 
ex..  "
,.." #
string..$ *
message..+ 2
,..2 3
params..4 :
object..; A
[..A B
]..B C
args..D H
)..H I
;..I J
}// 
}00 ∫
fC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Common\Interfaces\IJwtTokenGenerator.cs
	namespace 	
Stock
 
. 
Application 
. 
Common "
." #

Interfaces# -
{ 
public		 

	interface		 
IJwtTokenGenerator		 '
{

 
Task 
< 
string 
> 
GenerateTokenAsync '
(' (
User( ,
user- 1
)1 2
;2 3
string 
GenerateToken 
( 
User !
user" &
)& '
;' (
} 
} ›
gC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Common\Interfaces\ICurrentUserService.cs
	namespace 	
Stock
 
. 
Application 
. 
Common "
." #

Interfaces# -
{ 
public 

	interface 
ICurrentUserService (
{ 
int 
? 
UserId 
{ 
get 
; 
} 
string 
? 
UserName 
{ 
get 
; 
}  !
bool 
IsAuthenticated 
{ 
get "
;" #
}$ %
} 
}		 ë	
`C:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Common\Interfaces\IAuthService.cs
	namespace 	
Stock
 
. 
Application 
. 
Common "
." #

Interfaces# -
{ 
public

 

	interface

 
IAuthService

 !
{ 
Task 
< 
AuthResponseDto 
> 

LoginAsync (
(( )
LoginDto) 1
loginDto2 :
): ;
;; <
Task 
< 
AuthResponseDto 
> 
RegisterAsync +
(+ ,
RegisterDto, 7
registerDto8 C
)C D
;D E
string%% 
GenerateJwtToken%% 
(%%  
UserDto%%  '
user%%( ,
)%%, -
;%%- .
Task// 
<// 
AuthResponseDto// 
>// 
ChangePasswordAsync// 1
(//1 2
ChangePasswordDto//2 C
changePasswordDto//D U
,//U V
int//W Z
userId//[ a
)//a b
;//b c
}00 
}11 ≠
aC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Common\Interfaces\IAuditService.cs
	namespace 	
Stock
 
. 
Application 
. 
Common "
." #

Interfaces# -
{ 
public 

	interface 
IAuditService "
{ 
Task 
LogActionAsync 
( 
string "
action# )
,) *
string+ 1

entityType2 <
,< =
string> D
entityIdE M
,M N
intO R
?R S
userIdT Z
=[ \
null] a
,a b
stringc i
?i j
pathk o
=p q
nullr v
,v w
stringx ~
?~ 
details
Ä á
=
à â
null
ä é
)
é è
;
è ê
} 
}		 ˜	
XC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Common\ICommandHandler.cs
	namespace 	
Stock
 
. 
Application 
. 
Common "
{ 
public 

	interface 
ICommandHandler $
<$ %
in% '
TCommand( 0
,0 1
TResult2 9
>9 :
where; @
TCommandA I
:J K
ICommandL T
<T U
TResultU \
>\ ]
{ 
Task 
< 
TResult 
> 
Handle 
( 
TCommand %
command& -
,- .
CancellationToken/ @
cancellationTokenA R
)R S
;S T
}		 
public 

	interface 
ICommandHandler $
<$ %
in% '
TCommand( 0
>0 1
where2 7
TCommand8 @
:A B
ICommandC K
{ 
Task 
Handle 
( 
TCommand 
command $
,$ %
CancellationToken& 7
cancellationToken8 I
)I J
;J K
} 
} —
QC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Common\ICommand.cs
	namespace 	
Stock
 
. 
Application 
. 
Common "
{ 
public 

	interface 
ICommand 
< 
TResult %
>% &
{ 
} 
public 

	interface 
ICommand 
{ 
}		 
}

 ˜!
eC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Common\Behaviors\ValidationBehavior.cs
	namespace		 	
Stock		
 
.		 
Application		 
.		 
Common		 "
.		" #
	Behaviors		# ,
{

 
public 

class 
ValidationBehavior #
<# $
TRequest$ ,
,, -
	TResponse. 7
>7 8
:9 :
IPipelineBehavior; L
<L M
TRequestM U
,U V
	TResponseW `
>` a
where 
TRequest 
: 
IRequest !
<! "
	TResponse" +
>+ ,
{ 
private 
readonly 
IEnumerable $
<$ %

IValidator% /
</ 0
TRequest0 8
>8 9
>9 :
_validators; F
;F G
public 
ValidationBehavior !
(! "
IEnumerable" -
<- .

IValidator. 8
<8 9
TRequest9 A
>A B
>B C

validatorsD N
)N O
{ 	
_validators 
= 

validators $
;$ %
} 	
public 
async 
Task 
< 
	TResponse #
># $
Handle% +
(+ ,
TRequest, 4
request5 <
,< ="
RequestHandlerDelegate> T
<T U
	TResponseU ^
>^ _
next` d
,d e
CancellationTokenf w
cancellationToken	x â
)
â ä
{ 	
if 
( 
! 
_validators 
. 
Any  
(  !
)! "
)" #
{ 
return 
await 
next !
(! "
)" #
;# $
} 
var 
context 
= 
new 
ValidationContext /
</ 0
TRequest0 8
>8 9
(9 :
request: A
)A B
;B C
var 
validationResults !
=" #
await$ )
Task* .
.. /
WhenAll/ 6
(6 7
_validators   
.   
Select   "
(  " #
v  # $
=>  % '
v  ( )
.  ) *
ValidateAsync  * 7
(  7 8
context  8 ?
,  ? @
cancellationToken  A R
)  R S
)  S T
)  T U
;  U V
var## 
failures## 
=## 
validationResults## ,
.$$ 

SelectMany$$ 
($$ 
r$$ 
=>$$  
r$$! "
.$$" #
Errors$$# )
)$$) *
.%% 
Where%% 
(%% 
f%% 
=>%% 
f%% 
!=%%  
null%%! %
)%%% &
.&& 
ToList&& 
(&& 
)&& 
;&& 
if(( 
((( 
failures(( 
.(( 
Count(( 
!=(( !
$num((" #
)((# $
{)) 
var++ 
errorsDictionary++ $
=++% &
failures++' /
.,, 
GroupBy,, 
(,, 
e,, 
=>,, !
e,," #
.,,# $
PropertyName,,$ 0
,,,0 1
e,,2 3
=>,,4 6
e,,7 8
.,,8 9
ErrorMessage,,9 E
),,E F
.-- 
ToDictionary-- !
(--! "
failureGroup--" .
=>--/ 1
failureGroup--2 >
.--> ?
Key--? B
,--B C
failureGroup--D P
=>--Q S
failureGroup--T `
.--` a
ToArray--a h
(--h i
)--i j
)--j k
;--k l
throw00 
new00 
Stock00 
.00  
Domain00  &
.00& '

Exceptions00' 1
.001 2
ValidationException002 E
(00E F
errorsDictionary00F V
)00V W
;00W X
}11 
return44 
await44 
next44 
(44 
)44 
;44  
}55 	
}66 
}77 ¸
HC:\Users\muham\OneDrive\Masa√ºst√º\Stock\src\Stock.Application\Class1.cs
	namespace 	
Stock
 
. 
Application 
; 
public 
class 
Class1 
{ 
} 